{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import NativeReanimatedModule from\"./NativeReanimated\";import{isJest,shouldBeUseWeb}from\"./PlatformChecker\";import{makeShareableCloneOnUIRecursive,makeShareableCloneRecursive}from\"./shareables\";var IS_JEST=isJest();var IS_NATIVE=!shouldBeUseWeb();var _runOnUIQueue=[];export function setupMicrotasks(){'worklet';var microtasksQueue=[];var isExecutingMicrotasksQueue=false;global.queueMicrotask=function(callback){microtasksQueue.push(callback);};global.__callMicrotasks=function(){if(isExecutingMicrotasksQueue){return;}try{isExecutingMicrotasksQueue=true;for(var index=0;index<microtasksQueue.length;index+=1){microtasksQueue[index]();}microtasksQueue=[];global._maybeFlushUIUpdatesQueue();}finally{isExecutingMicrotasksQueue=false;}};}function callMicrotasksOnUIThread(){'worklet';global.__callMicrotasks();}export var callMicrotasks=IS_NATIVE?callMicrotasksOnUIThread:function(){};export function runOnUI(worklet){'worklet';if(__DEV__&&IS_NATIVE&&_WORKLET){throw new Error('[Reanimated] `runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');}if(__DEV__&&IS_NATIVE&&worklet.__workletHash===undefined){throw new Error('[Reanimated] `runOnUI` can only be used on worklets.');}return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(IS_JEST){NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';worklet.apply(void 0,args);}));return;}if(__DEV__){makeShareableCloneRecursive(worklet);makeShareableCloneRecursive(args);}_runOnUIQueue.push([worklet,args]);if(_runOnUIQueue.length===1){queueMicrotask(function(){var queue=_runOnUIQueue;_runOnUIQueue=[];NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';queue.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),worklet=_ref2[0],args=_ref2[1];worklet.apply(void 0,_toConsumableArray(args));});callMicrotasks();}));});}};}export function runOnUIImmediately(worklet){'worklet';if(__DEV__&&IS_NATIVE&&_WORKLET){throw new Error('[Reanimated] `runOnUIImmediately` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');}if(__DEV__&&IS_NATIVE&&worklet.__workletHash===undefined){throw new Error('[Reanimated] `runOnUIImmediately` can only be used on worklets.');}return function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';worklet.apply(void 0,args);}));};}if(__DEV__&&IS_NATIVE){var f=function f(){'worklet';};if(f.__workletHash===undefined){throw new Error(`[Reanimated] Failed to create a worklet. See \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#failed-to-create-a-worklet\\` for more details.`);}}function runWorkletOnJS(worklet){for(var _len3=arguments.length,args=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){args[_key3-1]=arguments[_key3];}worklet.apply(void 0,args);}export function runOnJS(fun){'worklet';if(!IS_NATIVE||!_WORKLET){return function(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}return queueMicrotask(args.length?function(){return fun.apply(void 0,args);}:fun);};}if(fun.__workletHash){return function(){for(var _len5=arguments.length,args=new Array(_len5),_key5=0;_key5<_len5;_key5++){args[_key5]=arguments[_key5];}return runOnJS(runWorkletOnJS).apply(void 0,[fun].concat(args));};}if(fun.__remoteFunction){fun=fun.__remoteFunction;}return function(){for(var _len6=arguments.length,args=new Array(_len6),_key6=0;_key6<_len6;_key6++){args[_key6]=arguments[_key6];}_scheduleOnJS(fun,args.length>0?makeShareableCloneOnUIRecursive(args):undefined);};}","map":{"version":3,"names":["NativeReanimatedModule","isJest","shouldBeUseWeb","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","IS_JEST","IS_NATIVE","_runOnUIQueue","setupMicrotasks","microtasksQueue","isExecutingMicrotasksQueue","global","queueMicrotask","callback","push","__callMicrotasks","index","length","_maybeFlushUIUpdatesQueue","callMicrotasksOnUIThread","callMicrotasks","runOnUI","worklet","__DEV__","_WORKLET","Error","__workletHash","undefined","_len","arguments","args","Array","_key","scheduleOnUI","apply","queue","forEach","_ref","_ref2","_slicedToArray","_toConsumableArray","runOnUIImmediately","_len2","_key2","f","runWorkletOnJS","_len3","_key3","runOnJS","fun","_len4","_key4","_len5","_key5","concat","__remoteFunction","_len6","_key6","_scheduleOnJS"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\threads.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport type { WorkletFunction } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\n\nconst IS_JEST = isJest();\nconst IS_NATIVE = !shouldBeUseWeb();\n\n/**\n * An array of [worklet, args] pairs.\n * */\nlet _runOnUIQueue: Array<[WorkletFunction<unknown[], unknown>, unknown[]]> = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n  global.queueMicrotask = (callback: () => void) => {\n    microtasksQueue.push(callback);\n  };\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = IS_NATIVE\n  ? callMicrotasksOnUIThread\n  : () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    };\n\n// @ts-expect-error This overload is correct since it's what user sees in his code\n// before it's transformed by Reanimated Babel plugin.\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => void;\n/**\n * Schedule a worklet to execute on the UI runtime. This method does not schedule the work immediately but instead\n * waits for other worklets to be scheduled within the same JS loop. It uses queueMicrotask to schedule all the worklets\n * at once making sure they will run within the same frame boundaries on the UI thread.\n */\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && IS_NATIVE && _WORKLET) {\n    throw new Error(\n      '[Reanimated] `runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && IS_NATIVE && worklet.__workletHash === undefined) {\n    throw new Error('[Reanimated] `runOnUI` can only be used on worklets.');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      NativeReanimatedModule.scheduleOnUI(\n        makeShareableCloneRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call shareable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    //\n    _runOnUIQueue.push([worklet as WorkletFunction<unknown[], unknown>, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(() => {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(\n          makeShareableCloneRecursive(() => {\n            'worklet';\n            queue.forEach(([worklet, args]) => {\n              worklet(...args);\n            });\n            callMicrotasks();\n          })\n        );\n      });\n    }\n  };\n}\n\n// @ts-expect-error Check `runOnUI` overload above.\nexport function runOnUIImmediately<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): WorkletFunction<Args, ReturnValue>;\n/**\n * Schedule a worklet to execute on the UI runtime skipping batching mechanism.\n */\nexport function runOnUIImmediately<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && IS_NATIVE && _WORKLET) {\n    throw new Error(\n      '[Reanimated] `runOnUIImmediately` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && IS_NATIVE && worklet.__workletHash === undefined) {\n    throw new Error(\n      '[Reanimated] `runOnUIImmediately` can only be used on worklets.'\n    );\n  }\n  return (...args) => {\n    NativeReanimatedModule.scheduleOnUI(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n  };\n}\n\nif (__DEV__ && IS_NATIVE) {\n  const f = (() => {\n    'worklet';\n  }) as WorkletFunction<[], void>;\n  if (f.__workletHash === undefined) {\n    throw new Error(\n      `[Reanimated] Failed to create a worklet. See \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#failed-to-create-a-worklet\\` for more details.`\n    );\n  }\n}\n\ntype ReleaseRemoteFunction<Args extends unknown[], ReturnValue> = {\n  (...args: Args): ReturnValue;\n};\n\ntype DevRemoteFunction<Args extends unknown[], ReturnValue> = {\n  __remoteFunction: (...args: Args) => ReturnValue;\n};\n\ntype RemoteFunction<Args extends unknown[], ReturnValue> =\n  | ReleaseRemoteFunction<Args, ReturnValue>\n  | DevRemoteFunction<Args, ReturnValue>;\n\nfunction runWorkletOnJS<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>,\n  ...args: Args\n): void {\n  // remote function that calls a worklet synchronously on the JS runtime\n  worklet(...args);\n}\n\n/**\n * Returns a function that can be called to be executed asynchronously on both\n * UI and JS threads.\n */\nexport function runOnJS<Args extends unknown[], ReturnValue>(\n  fun:\n    | ((...args: Args) => ReturnValue)\n    | RemoteFunction<Args, ReturnValue>\n    | WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  type FunWorklet = Extract<typeof fun, WorkletFunction<Args, ReturnValue>>;\n  type FunDevRemote = Extract<typeof fun, DevRemoteFunction<Args, ReturnValue>>;\n  if (!IS_NATIVE || !_WORKLET) {\n    // if we are already on the JS thread, we just schedule the worklet on the JS queue\n    return (...args) =>\n      queueMicrotask(\n        args.length\n          ? () => (fun as (...args: Args) => ReturnValue)(...args)\n          : (fun as () => ReturnValue)\n      );\n  }\n  if ((fun as FunWorklet).__workletHash) {\n    // If `fun` is a worklet, we schedule a call of a remote function `runWorkletOnJS`\n    // and pass the worklet as a first argument followed by original arguments.\n\n    return (...args) =>\n      runOnJS(runWorkletOnJS<Args, ReturnValue>)(\n        fun as WorkletFunction<Args, ReturnValue>,\n        ...args\n      );\n  }\n  if ((fun as FunDevRemote).__remoteFunction) {\n    // In development mode the function provided as `fun` throws an error message\n    // such that when someone accidentally calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we put the\n    // reference to the original remote function in the `__functionInDEV` property.\n    fun = (fun as FunDevRemote).__remoteFunction;\n  }\n  return (...args) => {\n    _scheduleOnJS(\n      fun as\n        | ((...args: Args) => ReturnValue)\n        | WorkletFunction<Args, ReturnValue>,\n      args.length > 0\n        ? // TODO TYPESCRIPT this cast is terrible but will be fixed\n          (makeShareableCloneOnUIRecursive(args) as unknown as unknown[])\n        : undefined\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
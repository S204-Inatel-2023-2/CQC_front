{"ast":null,"code":"import{addWhitelistedNativeProps}from\"../ConfigHelper\";export var createAnimatedPropAdapter=function createAnimatedPropAdapter(adapter,nativeProps){var nativePropsToAdd={};nativeProps===null||nativeProps===void 0?void 0:nativeProps.forEach(function(prop){nativePropsToAdd[prop]=true;});addWhitelistedNativeProps(nativePropsToAdd);return adapter;};","map":{"version":3,"names":["addWhitelistedNativeProps","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","forEach","prop"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\PropAdapters.ts"],"sourcesContent":["import { addWhitelistedNativeProps } from '../ConfigHelper';\nimport type { __AdapterWorkletFunction } from './commonTypes';\nimport type { AnimatedPropsAdapterFunction } from './helperTypes';\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype createAnimatedPropAdapterType = (\n  adapter: AnimatedPropsAdapterFunction,\n  nativeProps?: string[]\n) => AnimatedPropsAdapterFunction;\n\nexport const createAnimatedPropAdapter = ((\n  adapter: __AdapterWorkletFunction,\n  nativeProps?: string[]\n): __AdapterWorkletFunction => {\n  const nativePropsToAdd: { [key: string]: boolean } = {};\n  // eslint-disable-next-line no-unused-expressions\n  nativeProps?.forEach((prop) => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}) as createAnimatedPropAdapterType;\n"],"mappings":"AAAA,OAASA,yBAAyB,uBAUlC,MAAO,IAAM,CAAAC,yBAAyB,CAAI,QAA7B,CAAAA,yBAAyBA,CACpCC,OAAiC,CACjCC,WAAsB,CACO,CAC7B,GAAM,CAAAC,gBAA4C,CAAG,CAAC,CAAC,CAEvDD,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEE,OAAO,CAAE,SAAAC,IAAI,CAAK,CAC7BF,gBAAgB,CAACE,IAAI,CAAC,CAAG,IAAI,CAC/B,CAAC,CAAC,CACFN,yBAAyB,CAACI,gBAAgB,CAAC,CAC3C,MAAO,CAAAF,OAAO,CAChB,CAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
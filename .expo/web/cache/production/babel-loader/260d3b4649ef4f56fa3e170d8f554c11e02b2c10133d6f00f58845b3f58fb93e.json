{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{processColorsInProps}from\"./Colors\";import{_updatePropsJS}from\"./js-reanimated\";import{shouldBeUseWeb}from\"./PlatformChecker\";import{runOnUIImmediately}from\"./threads\";var updateProps;if(shouldBeUseWeb()){updateProps=function updateProps(_,updates,maybeViewRef,isAnimatedProps){'worklet';if(maybeViewRef){maybeViewRef.items.forEach(function(item,_){_updatePropsJS(updates,item,isAnimatedProps);});}};}else{updateProps=function updateProps(viewDescriptors,updates){'worklet';processColorsInProps(updates);global.UpdatePropsManager.update(viewDescriptors,updates);};}export var updatePropsJestWrapper=function updatePropsJestWrapper(viewDescriptors,updates,maybeViewRef,animatedStyle,adapters){adapters.forEach(function(adapter){adapter(updates);});animatedStyle.current.value=_objectSpread(_objectSpread({},animatedStyle.current.value),updates);updateProps(viewDescriptors,updates,maybeViewRef);};export default updateProps;var createUpdatePropsManager=global._IS_FABRIC?function(){'worklet';var operations=[];return{update:function update(viewDescriptors,updates){var _this=this;viewDescriptors.value.forEach(function(viewDescriptor){operations.push({shadowNodeWrapper:viewDescriptor.shadowNodeWrapper,updates:updates});if(operations.length===1){queueMicrotask(_this.flush);}});},flush:function flush(){_updatePropsFabric(operations);operations.length=0;}};}:function(){'worklet';var operations=[];return{update:function update(viewDescriptors,updates){var _this2=this;viewDescriptors.value.forEach(function(viewDescriptor){operations.push({tag:viewDescriptor.tag,name:viewDescriptor.name||'RCTView',updates:updates});if(operations.length===1){queueMicrotask(_this2.flush);}});},flush:function flush(){_updatePropsPaper(operations);operations.length=0;}};};runOnUIImmediately(function(){'worklet';global.UpdatePropsManager=createUpdatePropsManager();})();","map":{"version":3,"names":["processColorsInProps","_updatePropsJS","shouldBeUseWeb","runOnUIImmediately","updateProps","_","updates","maybeViewRef","isAnimatedProps","items","forEach","item","viewDescriptors","global","UpdatePropsManager","update","updatePropsJestWrapper","animatedStyle","adapters","adapter","current","value","_objectSpread","createUpdatePropsManager","_IS_FABRIC","operations","_this","viewDescriptor","push","shadowNodeWrapper","length","queueMicrotask","flush","_updatePropsFabric","_this2","tag","name","_updatePropsPaper"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\UpdateProps.ts"],"sourcesContent":["import type { MutableRefObject } from 'react';\nimport { processColorsInProps } from './Colors';\nimport type { ShadowNodeWrapper, SharedValue, StyleProps } from './commonTypes';\nimport type { AnimatedStyle } from './helperTypes';\nimport type { Descriptor } from './hook/commonTypes';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport type { ViewRefSet } from './ViewDescriptorsSet';\nimport { runOnUIImmediately } from './threads';\n\nlet updateProps: (\n  viewDescriptor: SharedValue<Descriptor[]>,\n  updates: StyleProps | AnimatedStyle<any>,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  isAnimatedProps?: boolean\n) => void;\n\nif (shouldBeUseWeb()) {\n  updateProps = (_, updates, maybeViewRef, isAnimatedProps) => {\n    'worklet';\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach((item, _) => {\n        _updatePropsJS(updates, item, isAnimatedProps);\n      });\n    }\n  };\n} else {\n  updateProps = (viewDescriptors, updates) => {\n    'worklet';\n    processColorsInProps(updates);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    global.UpdatePropsManager!.update(viewDescriptors, updates);\n  };\n}\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updates: AnimatedStyle<any>,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: ((updates: AnimatedStyle<any>) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\n\nexport default updateProps;\n\nconst createUpdatePropsManager = global._IS_FABRIC\n  ? () => {\n      'worklet';\n      // Fabric\n      const operations: {\n        shadowNodeWrapper: ShadowNodeWrapper;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: SharedValue<Descriptor[]>,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush() {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          _updatePropsFabric!(operations);\n          operations.length = 0;\n        },\n      };\n    }\n  : () => {\n      'worklet';\n      // Paper\n      const operations: {\n        tag: number;\n        name: string;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: SharedValue<Descriptor[]>,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              tag: viewDescriptor.tag,\n              name: viewDescriptor.name || 'RCTView',\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush() {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          _updatePropsPaper!(operations);\n          operations.length = 0;\n        },\n      };\n    };\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.UpdatePropsManager = createUpdatePropsManager();\n})();\n\nexport interface UpdatePropsManager {\n  update(\n    viewDescriptors: SharedValue<Descriptor[]>,\n    updates: StyleProps | AnimatedStyle<any>\n  ): void;\n  flush(): void;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
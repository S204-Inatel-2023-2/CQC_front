{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import NativeReanimatedModule from\"./NativeReanimated\";import{shouldBeUseWeb}from\"./PlatformChecker\";import{registerWorkletStackDetails}from\"./errors\";import{jsVersion}from\"./platform-specific/jsVersion\";var USE_STUB_IMPLEMENTATION=shouldBeUseWeb();var _shareableCache=new WeakMap();var _shareableFlag=Symbol('shareable flag');var MAGIC_KEY='REANIMATED_MAGIC_KEY';function isHostObject(value){'worklet';return MAGIC_KEY in value;}export function registerShareableMapping(shareable,shareableRef){if(USE_STUB_IMPLEMENTATION){return;}_shareableCache.set(shareable,shareableRef||_shareableFlag);}function isPlainJSObject(object){return Object.getPrototypeOf(object)===Object.prototype;}var INACCESSIBLE_OBJECT={__init:function __init(){'worklet';return new Proxy({},{get:function get(_,prop){if(prop==='_isReanimatedSharedValue'){return false;}throw new Error(`[Reanimated] Trying to access property \\`${String(prop)}\\` of an object which cannot be sent to the UI runtime.`);},set:function set(){throw new Error('[Reanimated] Trying to write to an object which cannot be sent to the UI runtime.');}});}};var DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD=30;var processedObjectAtThresholdDepth;export function makeShareableCloneRecursive(value){var shouldPersistRemote=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var depth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(USE_STUB_IMPLEMENTATION){return value;}if(depth>=DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD){if(depth===DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD){processedObjectAtThresholdDepth=value;}else if(value===processedObjectAtThresholdDepth){throw new Error('[Reanimated] Trying to convert a cyclic object to a shareable. This is not supported.');}}else{processedObjectAtThresholdDepth=undefined;}var type=typeof value;var isTypeObject=type==='object';var isTypeFunction=type==='function';if((isTypeObject||isTypeFunction)&&value!==null){var cached=_shareableCache.get(value);if(cached===_shareableFlag){return value;}else if(cached!==undefined){return cached;}else{var toAdapt;if(Array.isArray(value)){toAdapt=value.map(function(element){return makeShareableCloneRecursive(element,shouldPersistRemote,depth+1);});}else if(isTypeFunction&&value.__workletHash===undefined){toAdapt=value;}else if(isHostObject(value)){toAdapt=value;}else if(isPlainJSObject(value)||isTypeFunction){toAdapt={};if(value.__workletHash!==undefined){if(__DEV__){var babelVersion=value.__initData.version;if(babelVersion===undefined){throw new Error(`[Reanimated] Unknown version of Reanimated Babel plugin.\nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#unknown-version-of-reanimated-babel-plugin\\` for more details. \nOffending code was: \\`${getWorkletCode(value)}\\``);}else if(babelVersion!==jsVersion){throw new Error(`[Reanimated] Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);}registerWorkletStackDetails(value.__workletHash,value.__stackDetails);delete value.__stackDetails;}else if(value.__stackDetails){throw new Error(`[Reanimated] Using dev bundle in a release app build is not supported.\nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#using-dev-bundle-in-a-release-app-build-is-not-supported\\` for more details.`);}toAdapt.__initData=makeShareableCloneRecursive(value.__initData,true,depth+1);}for(var _ref of Object.entries(value)){var _ref2=_slicedToArray(_ref,2);var key=_ref2[0];var element=_ref2[1];toAdapt[key]=makeShareableCloneRecursive(element,shouldPersistRemote,depth+1);}}else if(value instanceof RegExp){var pattern=value.source;var flags=value.flags;var handle=makeShareableCloneRecursive({__init:function __init(){'worklet';return new RegExp(pattern,flags);}});registerShareableMapping(value,handle);return handle;}else{var inaccessibleObject=makeShareableCloneRecursive(INACCESSIBLE_OBJECT);_shareableCache.set(value,inaccessibleObject);return inaccessibleObject;}if(__DEV__){Object.freeze(value);}var adopted=NativeReanimatedModule.makeShareableClone(toAdapt,shouldPersistRemote);_shareableCache.set(value,adopted);_shareableCache.set(adopted,_shareableFlag);return adopted;}}return NativeReanimatedModule.makeShareableClone(value,shouldPersistRemote);}var WORKLET_CODE_THRESHOLD=255;function getWorkletCode(value){var _value$__initData;var code=value===null||value===void 0?void 0:(_value$__initData=value.__initData)===null||_value$__initData===void 0?void 0:_value$__initData.code;if(!code){return'unknown';}if(code.length>WORKLET_CODE_THRESHOLD){return`${code.substring(0,WORKLET_CODE_THRESHOLD)}...`;}return code;}function isRemoteFunction(value){'worklet';return!!value.__remoteFunction;}export function makeShareableCloneOnUIRecursive(value){'worklet';if(USE_STUB_IMPLEMENTATION){return value;}function cloneRecursive(value){if(typeof value==='object'&&value!==null||typeof value==='function'){if(isHostObject(value)){return _makeShareableClone(value);}if(isRemoteFunction(value)){return value.__remoteFunction;}if(Array.isArray(value)){return _makeShareableClone(value.map(cloneRecursive));}var toAdapt={};for(var _ref3 of Object.entries(value)){var _ref4=_slicedToArray(_ref3,2);var key=_ref4[0];var element=_ref4[1];toAdapt[key]=cloneRecursive(element);}return _makeShareableClone(toAdapt);}return _makeShareableClone(value);}return cloneRecursive(value);}export function makeShareable(value){if(USE_STUB_IMPLEMENTATION){return value;}var handle=makeShareableCloneRecursive({__init:function __init(){'worklet';return value;}});registerShareableMapping(value,handle);return value;}","map":{"version":3,"names":["NativeReanimatedModule","shouldBeUseWeb","registerWorkletStackDetails","jsVersion","USE_STUB_IMPLEMENTATION","_shareableCache","WeakMap","_shareableFlag","Symbol","MAGIC_KEY","isHostObject","value","registerShareableMapping","shareable","shareableRef","set","isPlainJSObject","object","Object","getPrototypeOf","prototype","INACCESSIBLE_OBJECT","__init","Proxy","get","_","prop","Error","String","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","processedObjectAtThresholdDepth","makeShareableCloneRecursive","shouldPersistRemote","arguments","length","undefined","depth","type","isTypeObject","isTypeFunction","cached","toAdapt","Array","isArray","map","element","__workletHash","__DEV__","babelVersion","__initData","version","getWorkletCode","__stackDetails","_ref","entries","_ref2","_slicedToArray","key","RegExp","pattern","source","flags","handle","inaccessibleObject","freeze","adopted","makeShareableClone","WORKLET_CODE_THRESHOLD","_value$__initData","code","substring","isRemoteFunction","__remoteFunction","makeShareableCloneOnUIRecursive","cloneRecursive","_makeShareableClone","_ref3","_ref4","makeShareable"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\shareables.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport type {\n  ShareableRef,\n  FlatShareableRef,\n  __WorkletFunction,\n} from './commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { registerWorkletStackDetails } from './errors';\nimport { jsVersion } from './platform-specific/jsVersion';\n\n// for web/chrome debugger/jest environments this file provides a stub implementation\n// where no shareable references are used. Instead, the objects themselves are used\n// instead of shareable references, because of the fact that we don't have to deal with\n// runnning the code on separate VMs.\nconst USE_STUB_IMPLEMENTATION = shouldBeUseWeb();\n\nconst _shareableCache = new WeakMap<\n  Record<string, unknown>,\n  ShareableRef<any> | symbol\n>();\n// the below symbol is used to represent a mapping from the value to itself\n// this is used to allow for a converted shareable to be passed to makeShareableClone\nconst _shareableFlag = Symbol('shareable flag');\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: NonNullable<object>) {\n  'worklet';\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nexport function registerShareableMapping(\n  shareable: any,\n  shareableRef?: ShareableRef<any>\n): void {\n  if (USE_STUB_IMPLEMENTATION) {\n    return;\n  }\n  _shareableCache.set(shareable, shareableRef || _shareableFlag);\n}\n\nfunction isPlainJSObject(object: object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as shareable values. In makeShareableCloneRecursive we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: any, prop: string | symbol) => {\n          if (prop === '_isReanimatedSharedValue') {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSharedValue check\n            // as it is being used in the mappers when extracing inputs recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new Error(\n            `[Reanimated] Trying to access property \\`${String(\n              prop\n            )}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new Error(\n            '[Reanimated] Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in makeShareableCloneRecursive at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: any;\n\nexport function makeShareableCloneRecursive<T>(\n  value: any,\n  shouldPersistRemote = false,\n  depth = 0\n): ShareableRef<T> {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be trasferred as shareable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new Error(\n        '[Reanimated] Trying to convert a cyclic object to a shareable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  // This one actually may be worth to be moved to c++, we also need similar logic to run on the UI thread\n  const type = typeof value;\n  const isTypeObject = type === 'object';\n  const isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    const cached = _shareableCache.get(value);\n    if (cached === _shareableFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached as ShareableRef<T>;\n    } else {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) =>\n          makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1)\n        );\n      } else if (isTypeFunction && value.__workletHash === undefined) {\n        // this is a remote function\n        toAdapt = value;\n      } else if (isHostObject(value)) {\n        // for host objects we pass the reference to the object as shareable and\n        // then recreate new host object wrapping the same instance on the UI thread.\n        // there is no point of iterating over keys as we do for regular objects.\n        toAdapt = value;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (value.__workletHash !== undefined) {\n          // we are converting a worklet\n          if (__DEV__) {\n            const babelVersion = value.__initData.version;\n            if (babelVersion === undefined) {\n              throw new Error(`[Reanimated] Unknown version of Reanimated Babel plugin.\nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#unknown-version-of-reanimated-babel-plugin\\` for more details. \nOffending code was: \\`${getWorkletCode(value)}\\``);\n            } else if (babelVersion !== jsVersion) {\n              throw new Error(`[Reanimated] Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);\n            }\n            registerWorkletStackDetails(\n              value.__workletHash,\n              value.__stackDetails\n            );\n            delete value.__stackDetails;\n          } else if (value.__stackDetails) {\n            // Detected debug version of the worklet in release bundle. This\n            // might lead to unexpected issues or errors. Probably one of user\n            // dependencies provided transpiled code with debug version of the\n            // Reanimated plugin.\n            throw new Error(\n              `[Reanimated] Using dev bundle in a release app build is not supported.\nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#using-dev-bundle-in-a-release-app-build-is-not-supported\\` for more details.`\n            );\n          }\n          // to save on transferring static __initData field of worklet structure\n          // we request shareable value to persist its UI counterpart. This means\n          // that the __initData field that contains long strings represeting the\n          // worklet code, source map, and location, will always be\n          // serialized/deserialized once.\n          toAdapt.__initData = makeShareableCloneRecursive(\n            value.__initData,\n            true,\n            depth + 1\n          );\n        }\n\n        for (const [key, element] of Object.entries(value)) {\n          toAdapt[key] = makeShareableCloneRecursive(\n            element,\n            shouldPersistRemote,\n            depth + 1\n          );\n        }\n      } else if (value instanceof RegExp) {\n        const pattern = value.source;\n        const flags = value.flags;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return new RegExp(pattern, flags);\n          },\n        });\n        registerShareableMapping(value, handle);\n        return handle as ShareableRef<T>;\n      } else {\n        // This is reached for object types that are not of plain Object.prototype.\n        // We don't support such objects from being transferred as shareables to\n        // the UI runtime and hence we replace them with \"inaccessible object\"\n        // which is implemented as a Proxy object that throws on any attempt\n        // of accessing its fields. We argue that such objects can sometimes leak\n        // as attributes of objects being captured by worklets but should never\n        // be used on the UI runtime regardless. If they are being accessed, the user\n        // will get an appropriate error message.\n        const inaccessibleObject =\n          makeShareableCloneRecursive<T>(INACCESSIBLE_OBJECT);\n        _shareableCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      if (__DEV__) {\n        // we freeze objects that are transformed to shareable. This should help\n        // detect issues when someone modifies data after it's been converted to\n        // shareable. Meaning that they may be doing a faulty assumption in their\n        // code expecting that the updates are going to automatically populate to\n        // the object sent to the UI thread. If the user really wants some objects\n        // to be mutable they should use shared values instead.\n        Object.freeze(value);\n      }\n      const adopted = NativeReanimatedModule.makeShareableClone(\n        toAdapt,\n        shouldPersistRemote\n      );\n      _shareableCache.set(value, adopted);\n      _shareableCache.set(adopted, _shareableFlag);\n      return adopted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(value, shouldPersistRemote);\n}\n\nconst WORKLET_CODE_THRESHOLD = 255;\n\nfunction getWorkletCode(value: __WorkletFunction) {\n  // @ts-ignore this is fine\n  const code = value?.__initData?.code;\n  if (!code) {\n    return 'unknown';\n  }\n  if (code.length > WORKLET_CODE_THRESHOLD) {\n    return `${code.substring(0, WORKLET_CODE_THRESHOLD)}...`;\n  }\n  return code;\n}\n\ntype RemoteFunction<T> = {\n  __remoteFunction: FlatShareableRef<T>;\n};\n\nfunction isRemoteFunction<T>(value: {\n  __remoteFunction?: unknown;\n}): value is RemoteFunction<T> {\n  'worklet';\n  return !!value.__remoteFunction;\n}\n\nexport function makeShareableCloneOnUIRecursive<T>(\n  value: T\n): FlatShareableRef<T> {\n  'worklet';\n  if (USE_STUB_IMPLEMENTATION) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  function cloneRecursive<T>(value: T): FlatShareableRef<T> {\n    if (\n      (typeof value === 'object' && value !== null) ||\n      typeof value === 'function'\n    ) {\n      if (isHostObject(value)) {\n        // We call `_makeShareableClone` to wrap the provided HostObject\n        // inside ShareableJSRef.\n        return _makeShareableClone(value) as FlatShareableRef<T>;\n      }\n      if (isRemoteFunction<T>(value)) {\n        // RemoteFunctions are created by us therefore they are\n        // a Shareable out of the box and there is no need to\n        // call `_makeShareableClone`.\n        return value.__remoteFunction;\n      }\n      if (Array.isArray(value)) {\n        return _makeShareableClone(\n          value.map(cloneRecursive)\n        ) as FlatShareableRef<T>;\n      }\n      const toAdapt: Record<string, FlatShareableRef<T>> = {};\n      for (const [key, element] of Object.entries(value)) {\n        toAdapt[key] = cloneRecursive<T>(element);\n      }\n      return _makeShareableClone(toAdapt) as FlatShareableRef<T>;\n    }\n    return _makeShareableClone(value);\n  }\n  return cloneRecursive(value);\n}\n\nexport function makeShareable<T>(value: T): T {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  registerShareableMapping(value, handle);\n  return value;\n}\n"],"mappings":"iEAAA,MAAO,CAAAA,sBAAsB,0BAM7B,OAASC,cAAc,yBACvB,OAASC,2BAA2B,gBACpC,OAASC,SAAS,qCAMlB,GAAM,CAAAC,uBAAuB,CAAGH,cAAc,EAAE,CAEhD,GAAM,CAAAI,eAAe,CAAG,GAAI,CAAAC,OAAO,EAGhC,CAGH,GAAM,CAAAC,cAAc,CAAGC,MAAM,CAAC,gBAAgB,CAAC,CAE/C,GAAM,CAAAC,SAAS,CAAG,sBAAsB,CAExC,QAAS,CAAAC,YAAYA,CAACC,KAA0B,CAAE,CAChD,SAAS,CAKT,MAAO,CAAAF,SAAS,GAAI,CAAAE,KAAK,CAC3B,CAEA,MAAO,SAAS,CAAAC,wBAAwBA,CACtCC,SAAc,CACdC,YAAgC,CAC1B,CACN,GAAIV,uBAAuB,CAAE,CAC3B,OACF,CACAC,eAAe,CAACU,GAAG,CAACF,SAAS,CAAEC,YAAY,EAAIP,cAAc,CAAC,CAChE,CAEA,QAAS,CAAAS,eAAeA,CAACC,MAAc,CAAE,CACvC,MAAO,CAAAC,MAAM,CAACC,cAAc,CAACF,MAAM,CAAC,GAAKC,MAAM,CAACE,SAAS,CAC3D,CASA,GAAM,CAAAC,mBAAmB,CAAG,CAC1BC,MAAM,CAAE,SAAAA,OAAA,CAAM,CACZ,SAAS,CACT,MAAO,IAAI,CAAAC,KAAK,CACd,CAAC,CAAC,CACF,CACEC,GAAG,CAAE,SAAAA,IAACC,CAAM,CAAEC,IAAqB,CAAK,CACtC,GAAIA,IAAI,GAAK,0BAA0B,CAAE,CAQvC,MAAO,MAAK,CACd,CACA,KAAM,IAAI,CAAAC,KAAK,CACZ,4CAA2CC,MAAM,CAChDF,IAAI,CACJ,yDAAwD,CAC3D,CACH,CAAC,CACDX,GAAG,CAAE,SAAAA,IAAA,CAAM,CACT,KAAM,IAAI,CAAAY,KAAK,CACb,mFAAmF,CACpF,CACH,CACF,CAAC,CACF,CACH,CACF,CAAC,CAED,GAAM,CAAAE,oCAAoC,CAAG,EAAE,CAG/C,GAAI,CAAAC,+BAAoC,CAExC,MAAO,SAAS,CAAAC,2BAA2BA,CACzCpB,KAAU,CAGO,IAFjB,CAAAqB,mBAAmB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,IAC3B,CAAAG,KAAK,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAET,GAAI7B,uBAAuB,CAAE,CAC3B,MAAO,CAAAO,KAAK,CACd,CACA,GAAIyB,KAAK,EAAIP,oCAAoC,CAAE,CAMjD,GAAIO,KAAK,GAAKP,oCAAoC,CAAE,CAClDC,+BAA+B,CAAGnB,KAAK,CACzC,CAAC,IAAM,IAAIA,KAAK,GAAKmB,+BAA+B,CAAE,CACpD,KAAM,IAAI,CAAAH,KAAK,CACb,uFAAuF,CACxF,CACH,CACF,CAAC,IAAM,CACLG,+BAA+B,CAAGK,SAAS,CAC7C,CAEA,GAAM,CAAAE,IAAI,CAAG,MAAO,CAAA1B,KAAK,CACzB,GAAM,CAAA2B,YAAY,CAAGD,IAAI,GAAK,QAAQ,CACtC,GAAM,CAAAE,cAAc,CAAGF,IAAI,GAAK,UAAU,CAC1C,GAAI,CAACC,YAAY,EAAIC,cAAc,GAAK5B,KAAK,GAAK,IAAI,CAAE,CACtD,GAAM,CAAA6B,MAAM,CAAGnC,eAAe,CAACmB,GAAG,CAACb,KAAK,CAAC,CACzC,GAAI6B,MAAM,GAAKjC,cAAc,CAAE,CAC7B,MAAO,CAAAI,KAAK,CACd,CAAC,IAAM,IAAI6B,MAAM,GAAKL,SAAS,CAAE,CAC/B,MAAO,CAAAK,MAAM,CACf,CAAC,IAAM,CACL,GAAI,CAAAC,OAAY,CAChB,GAAIC,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,CAAE,CACxB8B,OAAO,CAAG9B,KAAK,CAACiC,GAAG,CAAE,SAAAC,OAAO,QAC1B,CAAAd,2BAA2B,CAACc,OAAO,CAAEb,mBAAmB,CAAEI,KAAK,CAAG,CAAC,CAAC,GACrE,CACH,CAAC,IAAM,IAAIG,cAAc,EAAI5B,KAAK,CAACmC,aAAa,GAAKX,SAAS,CAAE,CAE9DM,OAAO,CAAG9B,KAAK,CACjB,CAAC,IAAM,IAAID,YAAY,CAACC,KAAK,CAAC,CAAE,CAI9B8B,OAAO,CAAG9B,KAAK,CACjB,CAAC,IAAM,IAAIK,eAAe,CAACL,KAAK,CAAC,EAAI4B,cAAc,CAAE,CACnDE,OAAO,CAAG,CAAC,CAAC,CACZ,GAAI9B,KAAK,CAACmC,aAAa,GAAKX,SAAS,CAAE,CAErC,GAAIY,OAAO,CAAE,CACX,GAAM,CAAAC,YAAY,CAAGrC,KAAK,CAACsC,UAAU,CAACC,OAAO,CAC7C,GAAIF,YAAY,GAAKb,SAAS,CAAE,CAC9B,KAAM,IAAI,CAAAR,KAAK,CAAE;AAC/B;AACA,wBAAwBwB,cAAc,CAACxC,KAAK,CAAE,IAAG,CAAC,CACtC,CAAC,IAAM,IAAIqC,YAAY,GAAK7C,SAAS,CAAE,CACrC,KAAM,IAAI,CAAAwB,KAAK,CAAE,8FAA6FxB,SAAU,QAAO6C,YAAa;AAC1J;AACA,wBAAwBG,cAAc,CAACxC,KAAK,CAAE,IAAG,CAAC,CACtC,CACAT,2BAA2B,CACzBS,KAAK,CAACmC,aAAa,CACnBnC,KAAK,CAACyC,cAAc,CACrB,CACD,MAAO,CAAAzC,KAAK,CAACyC,cAAc,CAC7B,CAAC,IAAM,IAAIzC,KAAK,CAACyC,cAAc,CAAE,CAK/B,KAAM,IAAI,CAAAzB,KAAK,CACZ;AACf,kKAAkK,CACrJ,CACH,CAMAc,OAAO,CAACQ,UAAU,CAAGlB,2BAA2B,CAC9CpB,KAAK,CAACsC,UAAU,CAChB,IAAI,CACJb,KAAK,CAAG,CAAC,CACV,CACH,CAEA,QAAAiB,IAAA,GAA6B,CAAAnC,MAAM,CAACoC,OAAO,CAAC3C,KAAK,CAAC,CAAE,KAAA4C,KAAA,CAAAC,cAAA,CAAAH,IAAA,OAAxC,CAAAI,GAAG,CAAAF,KAAA,OAAE,CAAAV,OAAO,CAAAU,KAAA,IACtBd,OAAO,CAACgB,GAAG,CAAC,CAAG1B,2BAA2B,CACxCc,OAAO,CACPb,mBAAmB,CACnBI,KAAK,CAAG,CAAC,CACV,CACH,CACF,CAAC,IAAM,IAAIzB,KAAK,WAAY,CAAA+C,MAAM,CAAE,CAClC,GAAM,CAAAC,OAAO,CAAGhD,KAAK,CAACiD,MAAM,CAC5B,GAAM,CAAAC,KAAK,CAAGlD,KAAK,CAACkD,KAAK,CACzB,GAAM,CAAAC,MAAM,CAAG/B,2BAA2B,CAAC,CACzCT,MAAM,CAAE,SAAAA,OAAA,CAAM,CACZ,SAAS,CACT,MAAO,IAAI,CAAAoC,MAAM,CAACC,OAAO,CAAEE,KAAK,CAAC,CACnC,CACF,CAAC,CAAC,CACFjD,wBAAwB,CAACD,KAAK,CAAEmD,MAAM,CAAC,CACvC,MAAO,CAAAA,MAAM,CACf,CAAC,IAAM,CASL,GAAM,CAAAC,kBAAkB,CACtBhC,2BAA2B,CAAIV,mBAAmB,CAAC,CACrDhB,eAAe,CAACU,GAAG,CAACJ,KAAK,CAAEoD,kBAAkB,CAAC,CAC9C,MAAO,CAAAA,kBAAkB,CAC3B,CACA,GAAIhB,OAAO,CAAE,CAOX7B,MAAM,CAAC8C,MAAM,CAACrD,KAAK,CAAC,CACtB,CACA,GAAM,CAAAsD,OAAO,CAAGjE,sBAAsB,CAACkE,kBAAkB,CACvDzB,OAAO,CACPT,mBAAmB,CACpB,CACD3B,eAAe,CAACU,GAAG,CAACJ,KAAK,CAAEsD,OAAO,CAAC,CACnC5D,eAAe,CAACU,GAAG,CAACkD,OAAO,CAAE1D,cAAc,CAAC,CAC5C,MAAO,CAAA0D,OAAO,CAChB,CACF,CACA,MAAO,CAAAjE,sBAAsB,CAACkE,kBAAkB,CAACvD,KAAK,CAAEqB,mBAAmB,CAAC,CAC9E,CAEA,GAAM,CAAAmC,sBAAsB,CAAG,GAAG,CAElC,QAAS,CAAAhB,cAAcA,CAACxC,KAAwB,CAAE,KAAAyD,iBAAA,CAEhD,GAAM,CAAAC,IAAI,CAAG1D,KAAK,SAALA,KAAK,kBAAAyD,iBAAA,CAALzD,KAAK,CAAEsC,UAAU,UAAAmB,iBAAA,iBAAjBA,iBAAA,CAAmBC,IAAI,CACpC,GAAI,CAACA,IAAI,CAAE,CACT,MAAO,SAAS,CAClB,CACA,GAAIA,IAAI,CAACnC,MAAM,CAAGiC,sBAAsB,CAAE,CACxC,MAAQ,GAAEE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAEH,sBAAsB,CAAE,KAAI,CAC1D,CACA,MAAO,CAAAE,IAAI,CACb,CAMA,QAAS,CAAAE,gBAAgBA,CAAI5D,KAE5B,CAA8B,CAC7B,SAAS,CACT,MAAO,CAAC,CAACA,KAAK,CAAC6D,gBAAgB,CACjC,CAEA,MAAO,SAAS,CAAAC,+BAA+BA,CAC7C9D,KAAQ,CACa,CACrB,SAAS,CACT,GAAIP,uBAAuB,CAAE,CAG3B,MAAO,CAAAO,KAAK,CACd,CACA,QAAS,CAAA+D,cAAcA,CAAI/D,KAAQ,CAAuB,CACxD,GACG,MAAO,CAAAA,KAAK,GAAK,QAAQ,EAAIA,KAAK,GAAK,IAAI,EAC5C,MAAO,CAAAA,KAAK,GAAK,UAAU,CAC3B,CACA,GAAID,YAAY,CAACC,KAAK,CAAC,CAAE,CAGvB,MAAO,CAAAgE,mBAAmB,CAAChE,KAAK,CAAC,CACnC,CACA,GAAI4D,gBAAgB,CAAI5D,KAAK,CAAC,CAAE,CAI9B,MAAO,CAAAA,KAAK,CAAC6D,gBAAgB,CAC/B,CACA,GAAI9B,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,CAAE,CACxB,MAAO,CAAAgE,mBAAmB,CACxBhE,KAAK,CAACiC,GAAG,CAAC8B,cAAc,CAAC,CAC1B,CACH,CACA,GAAM,CAAAjC,OAA4C,CAAG,CAAC,CAAC,CACvD,QAAAmC,KAAA,GAA6B,CAAA1D,MAAM,CAACoC,OAAO,CAAC3C,KAAK,CAAC,CAAE,KAAAkE,KAAA,CAAArB,cAAA,CAAAoB,KAAA,OAAxC,CAAAnB,GAAG,CAAAoB,KAAA,OAAE,CAAAhC,OAAO,CAAAgC,KAAA,IACtBpC,OAAO,CAACgB,GAAG,CAAC,CAAGiB,cAAc,CAAI7B,OAAO,CAAC,CAC3C,CACA,MAAO,CAAA8B,mBAAmB,CAAClC,OAAO,CAAC,CACrC,CACA,MAAO,CAAAkC,mBAAmB,CAAChE,KAAK,CAAC,CACnC,CACA,MAAO,CAAA+D,cAAc,CAAC/D,KAAK,CAAC,CAC9B,CAEA,MAAO,SAAS,CAAAmE,aAAaA,CAAInE,KAAQ,CAAK,CAC5C,GAAIP,uBAAuB,CAAE,CAC3B,MAAO,CAAAO,KAAK,CACd,CACA,GAAM,CAAAmD,MAAM,CAAG/B,2BAA2B,CAAC,CACzCT,MAAM,CAAE,SAAAA,OAAA,CAAM,CACZ,SAAS,CACT,MAAO,CAAAX,KAAK,CACd,CACF,CAAC,CAAC,CACFC,wBAAwB,CAACD,KAAK,CAAEmD,MAAM,CAAC,CACvC,MAAO,CAAAnD,KAAK,CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}
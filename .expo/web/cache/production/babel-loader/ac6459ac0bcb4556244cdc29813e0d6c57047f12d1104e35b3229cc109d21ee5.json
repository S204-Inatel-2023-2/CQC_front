{"ast":null,"code":"import{useEvent,useHandler}from\"./Hooks\";var EventType={UNDETERMINED:0,FAILED:1,BEGAN:2,CANCELLED:3,ACTIVE:4,END:5};export function useAnimatedGestureHandler(handlers,dependencies){var _useHandler=useHandler(handlers,dependencies),context=_useHandler.context,doDependenciesDiffer=_useHandler.doDependenciesDiffer,useWeb=_useHandler.useWeb;var handler=function handler(e){'worklet';var event=useWeb?e.nativeEvent:e;if(event.state===EventType.BEGAN&&handlers.onStart){handlers.onStart(event,context);}if(event.state===EventType.ACTIVE&&handlers.onActive){handlers.onActive(event,context);}if(event.oldState===EventType.ACTIVE&&event.state===EventType.END&&handlers.onEnd){handlers.onEnd(event,context);}if(event.oldState===EventType.BEGAN&&event.state===EventType.FAILED&&handlers.onFail){handlers.onFail(event,context);}if(event.oldState===EventType.ACTIVE&&event.state===EventType.CANCELLED&&handlers.onCancel){handlers.onCancel(event,context);}if((event.oldState===EventType.BEGAN||event.oldState===EventType.ACTIVE)&&event.state!==EventType.BEGAN&&event.state!==EventType.ACTIVE&&handlers.onFinish){handlers.onFinish(event,context,event.state===EventType.CANCELLED||event.state===EventType.FAILED);}};if(useWeb){return handler;}return useEvent(handler,['onGestureHandlerStateChange','onGestureHandlerEvent'],doDependenciesDiffer);}","map":{"version":3,"names":["useEvent","useHandler","EventType","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END","useAnimatedGestureHandler","handlers","dependencies","_useHandler","context","doDependenciesDiffer","useWeb","handler","e","event","nativeEvent","state","onStart","onActive","oldState","onEnd","onFail","onCancel","onFinish"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedGestureHandler.ts"],"sourcesContent":["import type { __Context, __WorkletFunction, NativeEvent } from '../commonTypes';\nimport type { DependencyList } from './commonTypes';\nimport { useEvent, useHandler } from './Hooks';\n\ninterface Handler<T, TContext extends __Context> extends __WorkletFunction {\n  (event: T, context: TContext, isCanceledOrFailed?: boolean): void;\n}\n\nexport interface GestureHandlers<T, TContext extends __Context> {\n  [key: string]: Handler<T, TContext> | undefined;\n  onStart?: Handler<T, TContext>;\n  onActive?: Handler<T, TContext>;\n  onEnd?: Handler<T, TContext>;\n  onFail?: Handler<T, TContext>;\n  onCancel?: Handler<T, TContext>;\n  onFinish?: Handler<T, TContext>;\n}\n\nconst EventType = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\ninterface GestureHandlerNativeEvent {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: (typeof EventType)[keyof typeof EventType];\n}\n\nexport interface GestureHandlerEvent<T> extends NativeEvent<T> {\n  nativeEvent: T;\n}\n\ntype InferArgument<T> = T extends GestureHandlerEvent<infer E>\n  ? E extends GestureHandlerNativeEvent\n    ? E\n    : never\n  : never;\n\nexport function useAnimatedGestureHandler<\n  T extends GestureHandlerEvent<any>,\n  TContext extends __Context = __Context,\n  Payload = InferArgument<T>\n>(\n  handlers: GestureHandlers<Payload, TContext>,\n  dependencies?: DependencyList\n): (e: T) => void {\n  const { context, doDependenciesDiffer, useWeb } = useHandler<\n    Payload,\n    TContext\n  >(handlers, dependencies);\n\n  const handler = (e: T) => {\n    'worklet';\n    const event = useWeb ? e.nativeEvent : e;\n\n    if (event.state === EventType.BEGAN && handlers.onStart) {\n      handlers.onStart(event, context);\n    }\n    if (event.state === EventType.ACTIVE && handlers.onActive) {\n      handlers.onActive(event, context);\n    }\n    if (\n      event.oldState === EventType.ACTIVE &&\n      event.state === EventType.END &&\n      handlers.onEnd\n    ) {\n      handlers.onEnd(event, context);\n    }\n    if (\n      event.oldState === EventType.BEGAN &&\n      event.state === EventType.FAILED &&\n      handlers.onFail\n    ) {\n      handlers.onFail(event, context);\n    }\n    if (\n      event.oldState === EventType.ACTIVE &&\n      event.state === EventType.CANCELLED &&\n      handlers.onCancel\n    ) {\n      handlers.onCancel(event, context);\n    }\n    if (\n      (event.oldState === EventType.BEGAN ||\n        event.oldState === EventType.ACTIVE) &&\n      event.state !== EventType.BEGAN &&\n      event.state !== EventType.ACTIVE &&\n      handlers.onFinish\n    ) {\n      handlers.onFinish(\n        event,\n        context,\n        event.state === EventType.CANCELLED || event.state === EventType.FAILED\n      );\n    }\n  };\n\n  if (useWeb) {\n    return handler;\n  }\n\n  return useEvent<T>(\n    handler,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    doDependenciesDiffer\n  ) as unknown as (e: T) => void; // this is not correct but we want to make GH think it receives a function\n}\n"],"mappings":"AAEA,OAASA,QAAQ,CAAEC,UAAU,eAgB7B,GAAM,CAAAC,SAAS,CAAG,CAChBC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,CAAC,CACTC,KAAK,CAAE,CAAC,CACRC,SAAS,CAAE,CAAC,CACZC,MAAM,CAAE,CAAC,CACTC,GAAG,CAAE,CACP,CAAC,CAkBD,MAAO,SAAS,CAAAC,yBAAyBA,CAKvCC,QAA4C,CAC5CC,YAA6B,CACb,CAChB,IAAAC,WAAA,CAAkDX,UAAU,CAG1DS,QAAQ,CAAEC,YAAY,CAAC,CAHjBE,OAAO,CAAAD,WAAA,CAAPC,OAAO,CAAEC,oBAAoB,CAAAF,WAAA,CAApBE,oBAAoB,CAAEC,MAAA,CAAAH,WAAA,CAAAG,MAAA,CAKvC,GAAM,CAAAC,OAAO,CAAI,QAAX,CAAAA,OAAOA,CAAIC,CAAI,CAAK,CACxB,SAAS,CACT,GAAM,CAAAC,KAAK,CAAGH,MAAM,CAAGE,CAAC,CAACE,WAAW,CAAGF,CAAC,CAExC,GAAIC,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACG,KAAK,EAAIK,QAAQ,CAACW,OAAO,CAAE,CACvDX,QAAQ,CAACW,OAAO,CAACH,KAAK,CAAEL,OAAO,CAAC,CAClC,CACA,GAAIK,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACK,MAAM,EAAIG,QAAQ,CAACY,QAAQ,CAAE,CACzDZ,QAAQ,CAACY,QAAQ,CAACJ,KAAK,CAAEL,OAAO,CAAC,CACnC,CACA,GACEK,KAAK,CAACK,QAAQ,GAAKrB,SAAS,CAACK,MAAM,EACnCW,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACM,GAAG,EAC7BE,QAAQ,CAACc,KAAK,CACd,CACAd,QAAQ,CAACc,KAAK,CAACN,KAAK,CAAEL,OAAO,CAAC,CAChC,CACA,GACEK,KAAK,CAACK,QAAQ,GAAKrB,SAAS,CAACG,KAAK,EAClCa,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACE,MAAM,EAChCM,QAAQ,CAACe,MAAM,CACf,CACAf,QAAQ,CAACe,MAAM,CAACP,KAAK,CAAEL,OAAO,CAAC,CACjC,CACA,GACEK,KAAK,CAACK,QAAQ,GAAKrB,SAAS,CAACK,MAAM,EACnCW,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACI,SAAS,EACnCI,QAAQ,CAACgB,QAAQ,CACjB,CACAhB,QAAQ,CAACgB,QAAQ,CAACR,KAAK,CAAEL,OAAO,CAAC,CACnC,CACA,GACE,CAACK,KAAK,CAACK,QAAQ,GAAKrB,SAAS,CAACG,KAAK,EACjCa,KAAK,CAACK,QAAQ,GAAKrB,SAAS,CAACK,MAAM,GACrCW,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACG,KAAK,EAC/Ba,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACK,MAAM,EAChCG,QAAQ,CAACiB,QAAQ,CACjB,CACAjB,QAAQ,CAACiB,QAAQ,CACfT,KAAK,CACLL,OAAO,CACPK,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACI,SAAS,EAAIY,KAAK,CAACE,KAAK,GAAKlB,SAAS,CAACE,MAAM,CACxE,CACH,CACF,CAAC,CAED,GAAIW,MAAM,CAAE,CACV,MAAO,CAAAC,OAAO,CAChB,CAEA,MAAO,CAAAhB,QAAQ,CACbgB,OAAO,CACP,CAAC,6BAA6B,CAAE,uBAAuB,CAAC,CACxDF,oBAAoB,CACrB,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
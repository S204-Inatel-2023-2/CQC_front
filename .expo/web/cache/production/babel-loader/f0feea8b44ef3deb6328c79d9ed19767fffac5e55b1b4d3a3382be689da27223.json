{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var _excluded=[\"enabled\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty2(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{State}from\"../../State\";import{PointerType,TouchEventType,EventTypes}from\"../interfaces\";import GestureHandlerOrchestrator from\"../tools/GestureHandlerOrchestrator\";import InteractionManager from\"../tools/InteractionManager\";import PointerTracker from\"../tools/PointerTracker\";var GestureHandler=function(){function GestureHandler(delegate){var _this=this;_classCallCheck(this,GestureHandler);_defineProperty(this,\"lastSentState\",null);_defineProperty(this,\"currentState\",State.UNDETERMINED);_defineProperty(this,\"shouldCancellWhenOutside\",false);_defineProperty(this,\"hasCustomActivationCriteria\",false);_defineProperty(this,\"enabled\",false);_defineProperty(this,\"viewRef\",void 0);_defineProperty(this,\"propsRef\",void 0);_defineProperty(this,\"handlerTag\",void 0);_defineProperty(this,\"config\",{enabled:false});_defineProperty(this,\"tracker\",new PointerTracker());_defineProperty(this,\"activationIndex\",0);_defineProperty(this,\"awaiting\",false);_defineProperty(this,\"active\",false);_defineProperty(this,\"shouldResetProgress\",false);_defineProperty(this,\"pointerType\",PointerType.NONE);_defineProperty(this,\"delegate\",void 0);_defineProperty(this,\"sendEvent\",function(newState,oldState){var _this$propsRef$curren=_this.propsRef.current,onGestureHandlerEvent=_this$propsRef$curren.onGestureHandlerEvent,onGestureHandlerStateChange=_this$propsRef$curren.onGestureHandlerStateChange;var resultEvent=_this.transformEventData(newState,oldState);if(_this.lastSentState!==newState){_this.lastSentState=newState;invokeNullableMethod(onGestureHandlerStateChange,resultEvent);}if(_this.currentState===State.ACTIVE){resultEvent.nativeEvent.oldState=undefined;invokeNullableMethod(onGestureHandlerEvent,resultEvent);}});this.delegate=delegate;}_createClass(GestureHandler,[{key:\"init\",value:function init(viewRef,propsRef){this.propsRef=propsRef;this.viewRef=viewRef;this.currentState=State.UNDETERMINED;this.delegate.init(viewRef,this);}},{key:\"attachEventManager\",value:function attachEventManager(manager){manager.setOnPointerDown(this.onPointerDown.bind(this));manager.setOnPointerAdd(this.onPointerAdd.bind(this));manager.setOnPointerUp(this.onPointerUp.bind(this));manager.setOnPointerRemove(this.onPointerRemove.bind(this));manager.setOnPointerMove(this.onPointerMove.bind(this));manager.setOnPointerEnter(this.onPointerEnter.bind(this));manager.setOnPointerLeave(this.onPointerLeave.bind(this));manager.setOnPointerCancel(this.onPointerCancel.bind(this));manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));manager.setListeners();}},{key:\"onCancel\",value:function onCancel(){}},{key:\"onReset\",value:function onReset(){}},{key:\"resetProgress\",value:function resetProgress(){}},{key:\"reset\",value:function reset(){this.tracker.resetTracker();this.onReset();this.resetProgress();this.delegate.reset();this.currentState=State.UNDETERMINED;}},{key:\"moveToState\",value:function moveToState(newState,sendIfDisabled){if(this.currentState===newState){return;}var oldState=this.currentState;this.currentState=newState;if(this.tracker.getTrackedPointersCount()>0&&this.config.needsPointerData&&this.isFinished()){this.cancelTouches();}GestureHandlerOrchestrator.getInstance().onHandlerStateChange(this,newState,oldState,sendIfDisabled);this.onStateChange(newState,oldState);}},{key:\"onStateChange\",value:function onStateChange(_newState,_oldState){}},{key:\"begin\",value:function begin(){if(!this.checkHitSlop()){return;}if(this.currentState===State.UNDETERMINED){this.moveToState(State.BEGAN);}}},{key:\"fail\",value:function fail(sendIfDisabled){if(this.currentState===State.ACTIVE||this.currentState===State.BEGAN){this.delegate.onFail();this.moveToState(State.FAILED,sendIfDisabled);}this.resetProgress();}},{key:\"cancel\",value:function cancel(sendIfDisabled){if(this.currentState===State.ACTIVE||this.currentState===State.UNDETERMINED||this.currentState===State.BEGAN){this.onCancel();this.delegate.onCancel();this.moveToState(State.CANCELLED,sendIfDisabled);}}},{key:\"activate\",value:function activate(){var _force=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(this.currentState===State.UNDETERMINED||this.currentState===State.BEGAN){this.delegate.onActivate();this.moveToState(State.ACTIVE);}}},{key:\"end\",value:function end(){if(this.currentState===State.BEGAN||this.currentState===State.ACTIVE){this.delegate.onEnd();this.moveToState(State.END);}this.resetProgress();}},{key:\"isAwaiting\",value:function isAwaiting(){return this.awaiting;}},{key:\"setAwaiting\",value:function setAwaiting(value){this.awaiting=value;}},{key:\"isActive\",value:function isActive(){return this.active;}},{key:\"setActive\",value:function setActive(value){this.active=value;}},{key:\"getShouldResetProgress\",value:function getShouldResetProgress(){return this.shouldResetProgress;}},{key:\"setShouldResetProgress\",value:function setShouldResetProgress(value){this.shouldResetProgress=value;}},{key:\"getActivationIndex\",value:function getActivationIndex(){return this.activationIndex;}},{key:\"setActivationIndex\",value:function setActivationIndex(value){this.activationIndex=value;}},{key:\"shouldWaitForHandlerFailure\",value:function shouldWaitForHandlerFailure(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldWaitForHandlerFailure(this,handler);}},{key:\"shouldRequireToWaitForFailure\",value:function shouldRequireToWaitForFailure(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(this,handler);}},{key:\"shouldRecognizeSimultaneously\",value:function shouldRecognizeSimultaneously(handler){if(handler===this){return true;}return InteractionManager.getInstance().shouldRecognizeSimultaneously(this,handler);}},{key:\"shouldBeCancelledByOther\",value:function shouldBeCancelledByOther(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldHandlerBeCancelledBy(this,handler);}},{key:\"onPointerDown\",value:function onPointerDown(event){GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);this.pointerType=event.pointerType;if(this.pointerType===PointerType.TOUCH){GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);}if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerAdd\",value:function onPointerAdd(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerUp\",value:function onPointerUp(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerRemove\",value:function onPointerRemove(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerMove\",value:function onPointerMove(event){this.tryToSendMoveEvent(false);if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerLeave\",value:function onPointerLeave(event){if(this.shouldCancellWhenOutside){switch(this.currentState){case State.ACTIVE:this.cancel();break;case State.BEGAN:this.fail();break;}return;}if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerEnter\",value:function onPointerEnter(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerCancel\",value:function onPointerCancel(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}this.cancel();this.reset();}},{key:\"onPointerOutOfBounds\",value:function onPointerOutOfBounds(event){this.tryToSendMoveEvent(true);if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerMoveOver\",value:function onPointerMoveOver(_event){}},{key:\"onPointerMoveOut\",value:function onPointerMoveOut(_event){}},{key:\"tryToSendMoveEvent\",value:function tryToSendMoveEvent(out){if(this.enabled&&this.active&&(!out||out&&!this.shouldCancellWhenOutside)){this.sendEvent(this.currentState,this.currentState);}}},{key:\"sendTouchEvent\",value:function sendTouchEvent(event){if(!this.enabled){return;}var onGestureHandlerEvent=this.propsRef.current.onGestureHandlerEvent;var touchEvent=this.transformTouchEvent(event);if(touchEvent){invokeNullableMethod(onGestureHandlerEvent,touchEvent);}}},{key:\"transformEventData\",value:function transformEventData(newState,oldState){return{nativeEvent:_objectSpread(_objectSpread({numberOfPointers:this.tracker.getTrackedPointersCount(),state:newState,pointerInside:this.delegate.isPointerInBounds({x:this.tracker.getLastAvgX(),y:this.tracker.getLastAvgY()})},this.transformNativeEvent()),{},{handlerTag:this.handlerTag,target:this.viewRef,oldState:newState!==oldState?oldState:undefined}),timeStamp:Date.now()};}},{key:\"transformTouchEvent\",value:function transformTouchEvent(event){var _this2=this;var _event$touchEventType;var rect=this.delegate.measureView();var all=[];var changed=[];var trackerData=this.tracker.getData();if(trackerData.size===0||!trackerData.has(event.pointerId)){return;}trackerData.forEach(function(element,key){var id=_this2.tracker.getMappedTouchEventId(key);all.push({id:id,x:element.lastX-rect.pageX,y:element.lastY-rect.pageY,absoluteX:element.lastX,absoluteY:element.lastY});});if(event.eventType!==EventTypes.CANCEL){changed.push({id:this.tracker.getMappedTouchEventId(event.pointerId),x:event.x-rect.pageX,y:event.y-rect.pageY,absoluteX:event.x,absoluteY:event.y});}else{trackerData.forEach(function(element,key){var id=_this2.tracker.getMappedTouchEventId(key);changed.push({id:id,x:element.lastX-rect.pageX,y:element.lastY-rect.pageY,absoluteX:element.lastX,absoluteY:element.lastY});});}var eventType=TouchEventType.UNDETERMINED;switch(event.eventType){case EventTypes.DOWN:case EventTypes.ADDITIONAL_POINTER_DOWN:eventType=TouchEventType.DOWN;break;case EventTypes.UP:case EventTypes.ADDITIONAL_POINTER_UP:eventType=TouchEventType.UP;break;case EventTypes.MOVE:eventType=TouchEventType.MOVE;break;case EventTypes.CANCEL:eventType=TouchEventType.CANCELLED;break;}var numberOfTouches=all.length;if(event.eventType===EventTypes.UP||event.eventType===EventTypes.ADDITIONAL_POINTER_UP){--numberOfTouches;}return{nativeEvent:{handlerTag:this.handlerTag,state:this.currentState,eventType:(_event$touchEventType=event.touchEventType)!==null&&_event$touchEventType!==void 0?_event$touchEventType:eventType,changedTouches:changed,allTouches:all,numberOfTouches:numberOfTouches},timeStamp:Date.now()};}},{key:\"cancelTouches\",value:function cancelTouches(){var _this3=this;var rect=this.delegate.measureView();var all=[];var changed=[];var trackerData=this.tracker.getData();if(trackerData.size===0){return;}trackerData.forEach(function(element,key){var id=_this3.tracker.getMappedTouchEventId(key);all.push({id:id,x:element.lastX-rect.pageX,y:element.lastY-rect.pageY,absoluteX:element.lastX,absoluteY:element.lastY});changed.push({id:id,x:element.lastX-rect.pageX,y:element.lastY-rect.pageY,absoluteX:element.lastX,absoluteY:element.lastY});});var cancelEvent={nativeEvent:{handlerTag:this.handlerTag,state:this.currentState,eventType:TouchEventType.CANCELLED,changedTouches:changed,allTouches:all,numberOfTouches:all.length},timeStamp:Date.now()};var onGestureHandlerEvent=this.propsRef.current.onGestureHandlerEvent;invokeNullableMethod(onGestureHandlerEvent,cancelEvent);}},{key:\"transformNativeEvent\",value:function transformNativeEvent(){var rect=this.delegate.measureView();return{x:this.tracker.getLastAvgX()-rect.pageX,y:this.tracker.getLastAvgY()-rect.pageY,absoluteX:this.tracker.getLastAvgX(),absoluteY:this.tracker.getLastAvgY()};}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref){var _ref$enabled=_ref.enabled,enabled=_ref$enabled===void 0?true:_ref$enabled,props=_objectWithoutProperties(_ref,_excluded);this.config=_objectSpread({enabled:enabled},props);this.enabled=enabled;if(this.config.shouldCancelWhenOutside!==undefined){this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);}this.validateHitSlops();if(this.enabled){return;}switch(this.currentState){case State.ACTIVE:this.fail(true);break;case State.UNDETERMINED:GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(this);break;default:this.cancel(true);break;}}},{key:\"checkCustomActivationCriteria\",value:function checkCustomActivationCriteria(criterias){for(var key in this.config){if(criterias.indexOf(key)>=0){this.hasCustomActivationCriteria=true;}}}},{key:\"validateHitSlops\",value:function validateHitSlops(){if(!this.config.hitSlop){return;}if(this.config.hitSlop.left!==undefined&&this.config.hitSlop.right!==undefined&&this.config.hitSlop.width!==undefined){throw new Error('HitSlop Error: Cannot define left, right and width at the same time');}if(this.config.hitSlop.width!==undefined&&this.config.hitSlop.left===undefined&&this.config.hitSlop.right===undefined){throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');}if(this.config.hitSlop.height!==undefined&&this.config.hitSlop.top!==undefined&&this.config.hitSlop.bottom!==undefined){throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');}if(this.config.hitSlop.height!==undefined&&this.config.hitSlop.top===undefined&&this.config.hitSlop.bottom===undefined){throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');}}},{key:\"checkHitSlop\",value:function checkHitSlop(){if(!this.config.hitSlop){return true;}var _this$delegate$measur=this.delegate.measureView(),width=_this$delegate$measur.width,height=_this$delegate$measur.height;var left=0;var top=0;var right=width;var bottom=height;if(this.config.hitSlop.horizontal!==undefined){left-=this.config.hitSlop.horizontal;right+=this.config.hitSlop.horizontal;}if(this.config.hitSlop.vertical!==undefined){top-=this.config.hitSlop.vertical;bottom+=this.config.hitSlop.vertical;}if(this.config.hitSlop.left!==undefined){left=-this.config.hitSlop.left;}if(this.config.hitSlop.right!==undefined){right=width+this.config.hitSlop.right;}if(this.config.hitSlop.top!==undefined){top=-this.config.hitSlop.top;}if(this.config.hitSlop.bottom!==undefined){bottom=width+this.config.hitSlop.bottom;}if(this.config.hitSlop.width!==undefined){if(this.config.hitSlop.left!==undefined){right=left+this.config.hitSlop.width;}else if(this.config.hitSlop.right!==undefined){left=right-this.config.hitSlop.width;}}if(this.config.hitSlop.height!==undefined){if(this.config.hitSlop.top!==undefined){bottom=top+this.config.hitSlop.height;}else if(this.config.hitSlop.bottom!==undefined){top=bottom-this.config.hitSlop.height;}}var rect=this.delegate.measureView();var offsetX=this.tracker.getLastX()-rect.pageX;var offsetY=this.tracker.getLastY()-rect.pageY;if(offsetX>=left&&offsetX<=right&&offsetY>=top&&offsetY<=bottom){return true;}return false;}},{key:\"resetConfig\",value:function resetConfig(){}},{key:\"getTag\",value:function getTag(){return this.handlerTag;}},{key:\"setTag\",value:function setTag(tag){this.handlerTag=tag;}},{key:\"getConfig\",value:function getConfig(){return this.config;}},{key:\"getDelegate\",value:function getDelegate(){return this.delegate;}},{key:\"getTracker\",value:function getTracker(){return this.tracker;}},{key:\"getTrackedPointersID\",value:function getTrackedPointersID(){return this.tracker.getTrackedPointersID();}},{key:\"getState\",value:function getState(){return this.currentState;}},{key:\"isEnabled\",value:function isEnabled(){return this.enabled;}},{key:\"isFinished\",value:function isFinished(){return this.currentState===State.END||this.currentState===State.FAILED||this.currentState===State.CANCELLED;}},{key:\"setShouldCancelWhenOutside\",value:function setShouldCancelWhenOutside(shouldCancel){this.shouldCancellWhenOutside=shouldCancel;}},{key:\"getShouldCancelWhenOutside\",value:function getShouldCancelWhenOutside(){return this.shouldCancellWhenOutside;}},{key:\"getPointerType\",value:function getPointerType(){return this.pointerType;}}]);return GestureHandler;}();export{GestureHandler as default};function invokeNullableMethod(method,event){if(!method){return;}if(typeof method==='function'){method(event);return;}if('__getHandler'in method&&typeof method.__getHandler==='function'){var handler=method.__getHandler();invokeNullableMethod(handler,event);return;}if(!('__nodeConfig'in method)){return;}var argMapping=method.__nodeConfig.argMapping;if(!Array.isArray(argMapping)){return;}for(var _ref2 of argMapping.entries()){var _ref3=_slicedToArray(_ref2,2);var index=_ref3[0];var _ref3$=_slicedToArray(_ref3[1],2);var key=_ref3$[0];var value=_ref3$[1];if(!(key in event.nativeEvent)){continue;}var nativeValue=event.nativeEvent[key];if(value!==null&&value!==void 0&&value.setValue){value.setValue(nativeValue);}else{method.__nodeConfig.argMapping[index]=[key,nativeValue];}}return;}","map":{"version":3,"names":["State","PointerType","TouchEventType","EventTypes","GestureHandlerOrchestrator","InteractionManager","PointerTracker","GestureHandler","delegate","_this","_classCallCheck","_defineProperty","UNDETERMINED","enabled","NONE","newState","oldState","_this$propsRef$curren","propsRef","current","onGestureHandlerEvent","onGestureHandlerStateChange","resultEvent","transformEventData","lastSentState","invokeNullableMethod","currentState","ACTIVE","nativeEvent","undefined","_createClass","key","value","init","viewRef","attachEventManager","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerLeave","onPointerLeave","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setOnPointerMoveOver","onPointerMoveOver","setOnPointerMoveOut","onPointerMoveOut","setListeners","onCancel","onReset","resetProgress","reset","tracker","resetTracker","moveToState","sendIfDisabled","getTrackedPointersCount","config","needsPointerData","isFinished","cancelTouches","getInstance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","onFail","FAILED","cancel","CANCELLED","activate","_force","arguments","length","onActivate","end","onEnd","END","isAwaiting","awaiting","setAwaiting","isActive","active","setActive","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","getActivationIndex","activationIndex","setActivationIndex","shouldWaitForHandlerFailure","handler","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","sendTouchEvent","tryToSendMoveEvent","shouldCancellWhenOutside","_event","out","sendEvent","touchEvent","transformTouchEvent","_objectSpread","numberOfPointers","state","pointerInside","isPointerInBounds","x","getLastAvgX","y","getLastAvgY","transformNativeEvent","handlerTag","target","timeStamp","Date","now","_this2","_event$touchEventType","rect","measureView","all","changed","trackerData","getData","size","has","pointerId","forEach","element","id","getMappedTouchEventId","push","lastX","pageX","lastY","pageY","absoluteX","absoluteY","eventType","CANCEL","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","touchEventType","changedTouches","allTouches","_this3","cancelEvent","updateGestureConfig","_ref","_ref$enabled","props","_objectWithoutProperties","_excluded","shouldCancelWhenOutside","setShouldCancelWhenOutside","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hasCustomActivationCriteria","hitSlop","left","right","width","Error","height","top","bottom","_this$delegate$measur","horizontal","vertical","offsetX","getLastX","offsetY","getLastY","resetConfig","getTag","setTag","tag","getConfig","getDelegate","getTracker","getTrackedPointersID","getState","isEnabled","shouldCancel","getShouldCancelWhenOutside","getPointerType","default","method","__getHandler","argMapping","__nodeConfig","Array","isArray","_ref2","entries","_ref3","_slicedToArray","index","_ref3$","nativeValue","setValue"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\GestureHandler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  PointerType,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport { GestureHandlerDelegate } from '../tools/GestureHandlerDelegate';\n\nexport default abstract class GestureHandler {\n  private lastSentState: State | null = null;\n  protected currentState: State = State.UNDETERMINED;\n\n  protected shouldCancellWhenOutside = false;\n  protected hasCustomActivationCriteria = false;\n  protected enabled = false;\n\n  private viewRef!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private handlerTag!: number;\n  protected config: Config = { enabled: false };\n\n  protected tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  protected activationIndex = 0;\n  protected awaiting = false;\n  protected active = false;\n  protected shouldResetProgress = false;\n  protected pointerType: PointerType = PointerType.NONE;\n\n  protected delegate: GestureHandlerDelegate<unknown>;\n\n  public constructor(delegate: GestureHandlerDelegate<unknown>) {\n    this.delegate = delegate;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(viewRef: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.viewRef = viewRef;\n\n    this.currentState = State.UNDETERMINED;\n\n    this.delegate.init(viewRef, this);\n  }\n\n  public attachEventManager(manager: EventManager<unknown>): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerLeave(this.onPointerLeave.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));\n    manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));\n    manager.setListeners();\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.delegate.reset();\n    this.currentState = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.currentState === newState) {\n      return;\n    }\n\n    const oldState = this.currentState;\n    this.currentState = newState;\n\n    if (\n      this.tracker.getTrackedPointersCount() > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.getInstance().onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.currentState === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.BEGAN\n    ) {\n      // Here the order of calling the delegate and moveToState is important.\n      // At this point we can use currentState as previuos state, because immediately after changing cursor we call moveToState method.\n      this.delegate.onFail();\n\n      this.moveToState(State.FAILED, sendIfDisabled);\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.onCancel();\n\n      // Same as above - order matters\n      this.delegate.onCancel();\n\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n    }\n  }\n\n  public activate(_force = false) {\n    if (\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.delegate.onActivate();\n\n      this.moveToState(State.ACTIVE);\n    }\n  }\n\n  public end() {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      // Same as above - order matters\n      this.delegate.onEnd();\n\n      this.moveToState(State.END);\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public isAwaiting(): boolean {\n    return this.awaiting;\n  }\n  public setAwaiting(value: boolean): void {\n    this.awaiting = value;\n  }\n\n  public isActive(): boolean {\n    return this.active;\n  }\n  public setActive(value: boolean): void {\n    this.active = value;\n  }\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public getActivationIndex(): number {\n    return this.activationIndex;\n  }\n  public setActivationIndex(value: number): void {\n    this.activationIndex = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.getInstance().shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerLeave(event: AdaptedEvent): void {\n    if (this.shouldCancellWhenOutside) {\n      switch (this.currentState) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n\n    this.cancel();\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerMoveOver(_event: AdaptedEvent): void {\n    // used only by hover gesture handler atm\n  }\n  protected onPointerMoveOut(_event: AdaptedEvent): void {\n    // used only by hover gesture handler atm\n  }\n  private tryToSendMoveEvent(out: boolean): void {\n    if (\n      this.enabled &&\n      this.active &&\n      (!out || (out && !this.shouldCancellWhenOutside))\n    ) {\n      this.sendEvent(this.currentState, this.currentState);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.currentState === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.getTrackedPointersCount(),\n        state: newState,\n        pointerInside: this.delegate.isPointerInBounds({\n          x: this.tracker.getLastAvgX(),\n          y: this.tracker.getLastAvgY(),\n        }),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.viewRef,\n        oldState: newState !== oldState ? oldState : undefined,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.pageX,\n        y: element.lastY - rect.pageY,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.pageX,\n        y: event.y - rect.pageY,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.lastX - rect.pageX,\n          y: element.lastY - rect.pageY,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: event.touchEventType ?? eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.pageX,\n        y: element.lastY - rect.pageY,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n\n      changed.push({\n        id: id,\n        x: element.lastX - rect.pageX,\n        y: element.lastY - rect.pageY,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent(): Record<string, unknown> {\n    // those properties are shared by most handlers and if not this method will be overriden\n    const rect = this.delegate.measureView();\n\n    return {\n      x: this.tracker.getLastAvgX() - rect.pageX,\n      y: this.tracker.getLastAvgY() - rect.pageY,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n    };\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this.config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(\n          this\n        );\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const { width, height } = this.delegate.measureView();\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect = this.delegate.measureView();\n    const offsetX: number = this.tracker.getLastX() - rect.pageX;\n    const offsetY: number = this.tracker.getLastY() - rect.pageY;\n\n    if (\n      offsetX >= left &&\n      offsetX <= right &&\n      offsetY >= top &&\n      offsetY <= bottom\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  protected resetConfig(): void {}\n\n  //\n  // Getters and setters\n  //\n\n  public getTag(): number {\n    return this.handlerTag;\n  }\n\n  public setTag(tag: number): void {\n    this.handlerTag = tag;\n  }\n\n  public getConfig() {\n    return this.config;\n  }\n\n  public getDelegate(): GestureHandlerDelegate<unknown> {\n    return this.delegate;\n  }\n\n  public getTracker(): PointerTracker {\n    return this.tracker;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.getTrackedPointersID();\n  }\n\n  public getState(): State {\n    return this.currentState;\n  }\n\n  public isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.currentState === State.END ||\n      this.currentState === State.FAILED ||\n      this.currentState === State.CANCELLED\n    );\n  }\n\n  protected setShouldCancelWhenOutside(shouldCancel: boolean) {\n    this.shouldCancellWhenOutside = shouldCancel;\n  }\n\n  protected getShouldCancelWhenOutside(): boolean {\n    return this.shouldCancellWhenOutside;\n  }\n\n  public getPointerType(): PointerType {\n    return this.pointerType;\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      //Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      //RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
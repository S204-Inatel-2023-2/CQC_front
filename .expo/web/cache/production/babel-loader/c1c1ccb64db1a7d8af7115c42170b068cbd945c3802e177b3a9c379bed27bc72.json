{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{withStyleAnimation}from\"../animation/styleAnimation\";import{makeUIMutable}from\"../mutables\";import{LayoutAnimationType}from\"./animationBuilder\";import{runOnUIImmediately}from\"../threads\";var TAG_OFFSET=1e9;function startObservingProgress(tag,sharedValue,animationType){'worklet';var isSharedTransition=animationType===LayoutAnimationType.SHARED_ELEMENT_TRANSITION;sharedValue.addListener(tag+TAG_OFFSET,function(){_notifyAboutProgress(tag,sharedValue.value,isSharedTransition);});}function stopObservingProgress(tag,sharedValue,removeView){'worklet';sharedValue.removeListener(tag+TAG_OFFSET);_notifyAboutEnd(tag,removeView);}function createLayoutAnimationManager(){'worklet';var enteringAnimationForTag=new Map();var mutableValuesForTag=new Map();return{start:function start(tag,type,yogaValues,config){if(type===LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS){global.ProgressTransitionRegister.onTransitionStart(tag,yogaValues);return;}var style=config(yogaValues);var currentAnimation=style.animations;if(type===LayoutAnimationType.ENTERING){enteringAnimationForTag.set(tag,currentAnimation);}else if(type===LayoutAnimationType.LAYOUT){var enteringAnimation=enteringAnimationForTag.get(tag);if(enteringAnimation){currentAnimation=_objectSpread(_objectSpread({},enteringAnimation),style.animations);}}var value=mutableValuesForTag.get(tag);if(value===undefined){value=makeUIMutable(style.initialValues);mutableValuesForTag.set(tag,value);}else{stopObservingProgress(tag,value,false);value._value=style.initialValues;}var animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){enteringAnimationForTag.delete(tag);mutableValuesForTag.delete(tag);var shouldRemoveView=type===LayoutAnimationType.EXITING;stopObservingProgress(tag,value,shouldRemoveView);}style.callback&&style.callback(finished===undefined?false:finished);};startObservingProgress(tag,value,type);value.value=animation;},stop:function stop(tag){var value=mutableValuesForTag.get(tag);if(!value){return;}stopObservingProgress(tag,value,true);}};}runOnUIImmediately(function(){'worklet';global.LayoutAnimationsManager=createLayoutAnimationManager();})();","map":{"version":3,"names":["withStyleAnimation","makeUIMutable","LayoutAnimationType","runOnUIImmediately","TAG_OFFSET","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","SHARED_ELEMENT_TRANSITION","addListener","_notifyAboutProgress","value","stopObservingProgress","removeView","removeListener","_notifyAboutEnd","createLayoutAnimationManager","enteringAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","SHARED_ELEMENT_TRANSITION_PROGRESS","global","ProgressTransitionRegister","onTransitionStart","style","currentAnimation","animations","ENTERING","set","LAYOUT","enteringAnimation","get","_objectSpread","undefined","initialValues","_value","animation","callback","finished","delete","shouldRemoveView","EXITING","stop","LayoutAnimationsManager"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\animationsManager.ts"],"sourcesContent":["import { withStyleAnimation } from '../animation/styleAnimation';\nimport type { SharedValue } from '../commonTypes';\nimport { makeUIMutable } from '../mutables';\nimport type {\n  LayoutAnimationFunction,\n  LayoutAnimationsValues,\n} from './animationBuilder';\nimport { LayoutAnimationType } from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<Record<string, unknown>>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  removeView: boolean\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, removeView);\n}\n\nfunction createLayoutAnimationManager() {\n  'worklet';\n  const enteringAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      yogaValues: LayoutAnimationsValues,\n      config: LayoutAnimationFunction\n    ) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      if (type === LayoutAnimationType.ENTERING) {\n        enteringAnimationForTag.set(tag, currentAnimation);\n      } else if (type === LayoutAnimationType.LAYOUT) {\n        // When layout animation is requested, but entering is still running, we merge\n        // new layout animation targets into the ongoing animation\n        const enteringAnimation = enteringAnimationForTag.get(tag);\n        if (enteringAnimation) {\n          currentAnimation = { ...enteringAnimation, ...style.animations };\n        }\n      }\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value, false);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method â€“ don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          enteringAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value, true);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n\nexport type LayoutAnimationsManager = ReturnType<\n  typeof createLayoutAnimationManager\n>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{EventTypes,PointerType}from\"../interfaces\";import EventManager from\"./EventManager\";import{isPointerInBounds}from\"../utils\";var PointerEventManager=function(_EventManager){_inherits(PointerEventManager,_EventManager);var _super=_createSuper(PointerEventManager);function PointerEventManager(){var _this;_classCallCheck(this,PointerEventManager);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"trackedPointers\",new Set());return _this;}_createClass(PointerEventManager,[{key:\"setListeners\",value:function setListeners(){var _this2=this;this.view.addEventListener('pointerdown',function(event){if(event.pointerType===PointerType.TOUCH){return;}if(!isPointerInBounds(_this2.view,{x:event.clientX,y:event.clientY})){return;}var adaptedEvent=_this2.mapEvent(event,EventTypes.DOWN);var target=event.target;target.setPointerCapture(adaptedEvent.pointerId);_this2.markAsInBounds(adaptedEvent.pointerId);_this2.trackedPointers.add(adaptedEvent.pointerId);if(++_this2.activePointersCounter>1){adaptedEvent.eventType=EventTypes.ADDITIONAL_POINTER_DOWN;_this2.onPointerAdd(adaptedEvent);}else{_this2.onPointerDown(adaptedEvent);}});this.view.addEventListener('pointerup',function(event){if(event.pointerType===PointerType.TOUCH){return;}if(_this2.activePointersCounter===0){return;}var adaptedEvent=_this2.mapEvent(event,EventTypes.UP);var target=event.target;target.releasePointerCapture(adaptedEvent.pointerId);_this2.markAsOutOfBounds(adaptedEvent.pointerId);_this2.trackedPointers.delete(adaptedEvent.pointerId);if(--_this2.activePointersCounter>0){adaptedEvent.eventType=EventTypes.ADDITIONAL_POINTER_UP;_this2.onPointerRemove(adaptedEvent);}else{_this2.onPointerUp(adaptedEvent);}});this.view.addEventListener('pointermove',function(event){if(event.pointerType===PointerType.TOUCH){return;}var adaptedEvent=_this2.mapEvent(event,EventTypes.MOVE);var target=event.target;if(!target.hasPointerCapture(event.pointerId)){target.setPointerCapture(event.pointerId);}var inBounds=isPointerInBounds(_this2.view,{x:adaptedEvent.x,y:adaptedEvent.y});var pointerIndex=_this2.pointersInBounds.indexOf(adaptedEvent.pointerId);if(inBounds){if(pointerIndex<0){adaptedEvent.eventType=EventTypes.ENTER;_this2.onPointerEnter(adaptedEvent);_this2.markAsInBounds(adaptedEvent.pointerId);}else{_this2.onPointerMove(adaptedEvent);}}else{if(pointerIndex>=0){adaptedEvent.eventType=EventTypes.LEAVE;_this2.onPointerLeave(adaptedEvent);_this2.markAsOutOfBounds(adaptedEvent.pointerId);}else{_this2.onPointerOutOfBounds(adaptedEvent);}}});this.view.addEventListener('pointercancel',function(event){if(event.pointerType===PointerType.TOUCH){return;}var adaptedEvent=_this2.mapEvent(event,EventTypes.CANCEL);_this2.onPointerCancel(adaptedEvent);_this2.markAsOutOfBounds(adaptedEvent.pointerId);_this2.activePointersCounter=0;_this2.trackedPointers.clear();});this.view.addEventListener('pointerenter',function(event){if(event.pointerType===PointerType.TOUCH){return;}var adaptedEvent=_this2.mapEvent(event,EventTypes.ENTER);_this2.onPointerMoveOver(adaptedEvent);});this.view.addEventListener('pointerleave',function(event){if(event.pointerType===PointerType.TOUCH){return;}var adaptedEvent=_this2.mapEvent(event,EventTypes.LEAVE);_this2.onPointerMoveOut(adaptedEvent);});this.view.addEventListener('lostpointercapture',function(event){var adaptedEvent=_this2.mapEvent(event,EventTypes.CANCEL);if(_this2.trackedPointers.has(adaptedEvent.pointerId)){_this2.onPointerCancel(adaptedEvent);_this2.activePointersCounter=0;_this2.trackedPointers.clear();}});}},{key:\"mapEvent\",value:function mapEvent(event,eventType){return{x:event.clientX,y:event.clientY,offsetX:event.offsetX,offsetY:event.offsetY,pointerId:event.pointerId,eventType:eventType,pointerType:event.pointerType,buttons:event.buttons,time:event.timeStamp};}},{key:\"resetManager\",value:function resetManager(){_get(_getPrototypeOf(PointerEventManager.prototype),\"resetManager\",this).call(this);this.trackedPointers.clear();}}]);return PointerEventManager;}(EventManager);export{PointerEventManager as default};","map":{"version":3,"names":["EventTypes","PointerType","EventManager","isPointerInBounds","PointerEventManager","_EventManager","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","Set","_createClass","key","value","setListeners","_this2","view","addEventListener","event","pointerType","TOUCH","x","clientX","y","clientY","adaptedEvent","mapEvent","DOWN","target","setPointerCapture","pointerId","markAsInBounds","trackedPointers","add","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","UP","releasePointerCapture","markAsOutOfBounds","delete","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","MOVE","hasPointerCapture","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","onPointerOutOfBounds","CANCEL","onPointerCancel","clear","onPointerMoveOver","onPointerMoveOut","has","offsetX","offsetY","buttons","time","timeStamp","resetManager","_get","_getPrototypeOf","prototype","default"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\PointerEventManager.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes, PointerType } from '../interfaces';\nimport EventManager from './EventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default class PointerEventManager extends EventManager<HTMLElement> {\n  private trackedPointers = new Set<number>();\n\n  public setListeners(): void {\n    this.view.addEventListener('pointerdown', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n      if (\n        !isPointerInBounds(this.view, { x: event.clientX, y: event.clientY })\n      ) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n      const target = event.target as HTMLElement;\n\n      target.setPointerCapture(adaptedEvent.pointerId);\n      this.markAsInBounds(adaptedEvent.pointerId);\n      this.trackedPointers.add(adaptedEvent.pointerId);\n\n      if (++this.activePointersCounter > 1) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n        this.onPointerAdd(adaptedEvent);\n      } else {\n        this.onPointerDown(adaptedEvent);\n      }\n    });\n\n    this.view.addEventListener('pointerup', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      // When we call reset on gesture handlers, it also resets their event managers\n      // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n      // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n      // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n      if (this.activePointersCounter === 0) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.UP);\n      const target = event.target as HTMLElement;\n\n      target.releasePointerCapture(adaptedEvent.pointerId);\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n      this.trackedPointers.delete(adaptedEvent.pointerId);\n\n      if (--this.activePointersCounter > 0) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n        this.onPointerRemove(adaptedEvent);\n      } else {\n        this.onPointerUp(adaptedEvent);\n      }\n    });\n\n    this.view.addEventListener('pointermove', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n      const target = event.target as HTMLElement;\n\n      // You may be wondering why are we setting pointer capture here, when we\n      // already set it in `pointerdown` handler. Well, that's a great question,\n      // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n      // says that the requirement for `setPointerCapture` to work is that pointer\n      // must be in 'active buttons state`, otherwise it will fail silently, which\n      // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n      // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n      // will succeed, for some reason. Since it fails silently, we don't actually know\n      // if it worked or not (there's `gotpointercapture` event, but the complexity of\n      // incorporating it here seems stupid), so we just call it again here, every time\n      // pointer moves until it succeeds.\n      // God, I do love web development.\n      if (!target.hasPointerCapture(event.pointerId)) {\n        target.setPointerCapture(event.pointerId);\n      }\n\n      const inBounds: boolean = isPointerInBounds(this.view, {\n        x: adaptedEvent.x,\n        y: adaptedEvent.y,\n      });\n\n      const pointerIndex: number = this.pointersInBounds.indexOf(\n        adaptedEvent.pointerId\n      );\n\n      if (inBounds) {\n        if (pointerIndex < 0) {\n          adaptedEvent.eventType = EventTypes.ENTER;\n          this.onPointerEnter(adaptedEvent);\n          this.markAsInBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerMove(adaptedEvent);\n        }\n      } else {\n        if (pointerIndex >= 0) {\n          adaptedEvent.eventType = EventTypes.LEAVE;\n          this.onPointerLeave(adaptedEvent);\n          this.markAsOutOfBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerOutOfBounds(adaptedEvent);\n        }\n      }\n    });\n\n    this.view.addEventListener('pointercancel', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(\n        event,\n        EventTypes.CANCEL\n      );\n\n      this.onPointerCancel(adaptedEvent);\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    });\n\n    // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n    // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n    // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n    // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n\n    this.view.addEventListener('pointerenter', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.ENTER);\n\n      this.onPointerMoveOver(adaptedEvent);\n    });\n\n    this.view.addEventListener('pointerleave', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.LEAVE);\n\n      this.onPointerMoveOut(adaptedEvent);\n    });\n\n    this.view.addEventListener(\n      'lostpointercapture',\n      (event: PointerEvent): void => {\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.CANCEL\n        );\n\n        if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n          // in some cases the `pointerup` event is not fired, but `lostpointercapture` is\n          // we simulate the `pointercancel` event here to make sure the gesture handler stops tracking it\n          this.onPointerCancel(adaptedEvent);\n\n          this.activePointersCounter = 0;\n          this.trackedPointers.clear();\n        }\n      }\n    );\n  }\n\n  protected mapEvent(event: PointerEvent, eventType: EventTypes): AdaptedEvent {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: event.offsetX,\n      offsetY: event.offsetY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType: event.pointerType as PointerType,\n      buttons: event.buttons,\n      time: event.timeStamp,\n    };\n  }\n\n  public resetManager(): void {\n    super.resetManager();\n    this.trackedPointers.clear();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
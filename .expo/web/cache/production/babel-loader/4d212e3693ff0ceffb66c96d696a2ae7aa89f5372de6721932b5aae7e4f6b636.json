{"ast":null,"code":"import{useRef}from'react';import{useSharedValue}from\"./useSharedValue\";import{getShadowNodeWrapperFromRef}from\"../fabricUtils\";import{makeShareableCloneRecursive,registerShareableMapping}from\"../shareables\";import Platform from\"react-native-web/dist/exports/Platform\";import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";function getComponentOrScrollable(component){if(global._IS_FABRIC&&component.getNativeScrollRef){return component.getNativeScrollRef();}else if(!global._IS_FABRIC&&component.getScrollableNode){return component.getScrollableNode();}return component;}var getTagValueFunction=global._IS_FABRIC?getShadowNodeWrapperFromRef:findNodeHandle;export function useAnimatedRef(){var tag=useSharedValue(-1);var viewName=useSharedValue(null);var ref=useRef();if(!ref.current){var fun=function fun(component){if(component){tag.value=getTagValueFunction(getComponentOrScrollable(component));fun.current=component;if(Platform.OS==='ios'&&!global._IS_FABRIC){var _component$viewConfig;viewName.value=(component===null||component===void 0?void 0:(_component$viewConfig=component.viewConfig)===null||_component$viewConfig===void 0?void 0:_component$viewConfig.uiViewClassName)||'RCTView';}}return tag.value;};fun.current=null;var remoteRef=makeShareableCloneRecursive({__init:function __init(){'worklet';var f=function f(){return tag.value;};f.viewName=viewName;return f;}});registerShareableMapping(fun,remoteRef);ref.current=fun;}return ref.current;}","map":{"version":3,"names":["useRef","useSharedValue","getShadowNodeWrapperFromRef","makeShareableCloneRecursive","registerShareableMapping","Platform","findNodeHandle","getComponentOrScrollable","component","global","_IS_FABRIC","getNativeScrollRef","getScrollableNode","getTagValueFunction","useAnimatedRef","tag","viewName","ref","current","fun","value","OS","_component$viewConfig","viewConfig","uiViewClassName","remoteRef","__init","f"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedRef.ts"],"sourcesContent":["import type { Component } from 'react';\nimport { useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedRef } from './commonTypes';\nimport type { ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport {\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from '../shareables';\nimport { Platform, findNodeHandle } from 'react-native';\n\ninterface MaybeScrollableComponent extends Component {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getNativeScrollRef?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getScrollableNode?: any;\n  viewConfig?: {\n    uiViewClassName?: string;\n  };\n}\n\nfunction getComponentOrScrollable(component: MaybeScrollableComponent) {\n  if (global._IS_FABRIC && component.getNativeScrollRef) {\n    return component.getNativeScrollRef();\n  } else if (!global._IS_FABRIC && component.getScrollableNode) {\n    return component.getScrollableNode();\n  }\n  return component;\n}\n\nconst getTagValueFunction = global._IS_FABRIC\n  ? getShadowNodeWrapperFromRef\n  : findNodeHandle;\n\nexport function useAnimatedRef<\n  T extends MaybeScrollableComponent\n>(): AnimatedRef<T> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const viewName = useSharedValue<string | null>(null);\n\n  const ref = useRef<AnimatedRef<T>>();\n\n  if (!ref.current) {\n    const fun: AnimatedRef<T> = <AnimatedRef<T>>((component) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        tag.value = getTagValueFunction(getComponentOrScrollable(component));\n        fun.current = component;\n        // viewName is required only on iOS with Paper\n        if (Platform.OS === 'ios' && !global._IS_FABRIC) {\n          viewName.value = component?.viewConfig?.uiViewClassName || 'RCTView';\n        }\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const remoteRef = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        const f = () => tag.value;\n        f.viewName = viewName;\n        return f;\n      },\n    });\n    registerShareableMapping(fun, remoteRef);\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n"],"mappings":"AACA,OAASA,MAAM,KAAQ,OAAO,CAC9B,OAASC,cAAc,wBAGvB,OAASC,2BAA2B,sBACpC,OACEC,2BAA2B,CAC3BC,wBAAwB,qBACJ,OAAAC,QAAA,qDAAAC,cAAA,oDAatB,QAAS,CAAAC,wBAAwBA,CAACC,SAAmC,CAAE,CACrE,GAAIC,MAAM,CAACC,UAAU,EAAIF,SAAS,CAACG,kBAAkB,CAAE,CACrD,MAAO,CAAAH,SAAS,CAACG,kBAAkB,EAAE,CACvC,CAAC,IAAM,IAAI,CAACF,MAAM,CAACC,UAAU,EAAIF,SAAS,CAACI,iBAAiB,CAAE,CAC5D,MAAO,CAAAJ,SAAS,CAACI,iBAAiB,EAAE,CACtC,CACA,MAAO,CAAAJ,SAAS,CAClB,CAEA,GAAM,CAAAK,mBAAmB,CAAGJ,MAAM,CAACC,UAAU,CACzCR,2BAA2B,CAC3BI,cAAc,CAElB,MAAO,SAAS,CAAAQ,cAAcA,CAAA,CAEV,CAClB,GAAM,CAAAC,GAAG,CAAGd,cAAc,CAAoC,CAAC,CAAC,CAAC,CACjE,GAAM,CAAAe,QAAQ,CAAGf,cAAc,CAAgB,IAAI,CAAC,CAEpD,GAAM,CAAAgB,GAAG,CAAGjB,MAAM,EAAkB,CAEpC,GAAI,CAACiB,GAAG,CAACC,OAAO,CAAE,CAChB,GAAM,CAAAC,GAAmB,CAAqB,QAAxC,CAAAA,GAAmBA,CAAqBX,SAAS,CAAK,CAE1D,GAAIA,SAAS,CAAE,CACbO,GAAG,CAACK,KAAK,CAAGP,mBAAmB,CAACN,wBAAwB,CAACC,SAAS,CAAC,CAAC,CACpEW,GAAG,CAACD,OAAO,CAAGV,SAAS,CAEvB,GAAIH,QAAQ,CAACgB,EAAE,GAAK,KAAK,EAAI,CAACZ,MAAM,CAACC,UAAU,CAAE,KAAAY,qBAAA,CAC/CN,QAAQ,CAACI,KAAK,CAAG,CAAAZ,SAAS,SAATA,SAAS,kBAAAc,qBAAA,CAATd,SAAS,CAAEe,UAAU,UAAAD,qBAAA,iBAArBA,qBAAA,CAAuBE,eAAe,GAAI,SAAS,CACtE,CACF,CACA,MAAO,CAAAT,GAAG,CAACK,KAAK,CAClB,CAAE,CAEFD,GAAG,CAACD,OAAO,CAAG,IAAI,CAElB,GAAM,CAAAO,SAAS,CAAGtB,2BAA2B,CAAC,CAC5CuB,MAAM,CAAE,SAAAA,OAAA,CAAM,CACZ,SAAS,CACT,GAAM,CAAAC,CAAC,CAAG,QAAJ,CAAAA,CAACA,CAAA,QAAS,CAAAZ,GAAG,CAACK,KAAK,GACzBO,CAAC,CAACX,QAAQ,CAAGA,QAAQ,CACrB,MAAO,CAAAW,CAAC,CACV,CACF,CAAC,CAAC,CACFvB,wBAAwB,CAACe,GAAG,CAAEM,SAAS,CAAC,CACxCR,GAAG,CAACC,OAAO,CAAGC,GAAG,CACnB,CAEA,MAAO,CAAAF,GAAG,CAACC,OAAO,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
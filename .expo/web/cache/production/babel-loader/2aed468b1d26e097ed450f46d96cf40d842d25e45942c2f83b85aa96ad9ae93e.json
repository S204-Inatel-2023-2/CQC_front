{"ast":null,"code":"import{useEffect,useRef}from'react';import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import{useEvent}from\"./utils\";import{useSharedValue}from\"./useSharedValue\";var scrollEventNames=['onScroll','onScrollBeginDrag','onScrollEndDrag','onMomentumScrollBegin','onMomentumScrollEnd'];export function useScrollViewOffset(aref,initialRef){var offsetRef=useRef(initialRef!==undefined?initialRef:useSharedValue(0));var event=useEvent(function(event){'worklet';offsetRef.current.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;},scrollEventNames);useEffect(function(){var _event$current;var viewTag=findNodeHandle(aref.current);(_event$current=event.current)===null||_event$current===void 0?void 0:_event$current.registerForEvents(viewTag);},[aref.current]);return offsetRef.current;}","map":{"version":3,"names":["useEffect","useRef","findNodeHandle","useEvent","useSharedValue","scrollEventNames","useScrollViewOffset","aref","initialRef","offsetRef","undefined","event","current","value","contentOffset","x","y","_event$current","viewTag","registerForEvents"],"sources":["C:\\Users\\Davi\\Desktop\\projeto\\telaLogin\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useScrollViewOffset.ts"],"sourcesContent":["import type { RefObject } from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport type Animated from '../../index'; // TODO: fixme?\nimport type { ScrollEvent } from './useAnimatedScrollHandler';\nimport type { SharedValue } from '../commonTypes';\nimport { findNodeHandle } from 'react-native';\nimport { useEvent } from './utils';\nimport { useSharedValue } from './useSharedValue';\n\nconst scrollEventNames = [\n  'onScroll',\n  'onScrollBeginDrag',\n  'onScrollEndDrag',\n  'onMomentumScrollBegin',\n  'onMomentumScrollEnd',\n];\n\nexport function useScrollViewOffset(\n  aref: RefObject<Animated.ScrollView>,\n  initialRef?: SharedValue<number>\n): SharedValue<number> {\n  const offsetRef = useRef(\n    initialRef !== undefined ? initialRef : useSharedValue(0)\n  );\n\n  const event = useEvent<ScrollEvent>((event: ScrollEvent) => {\n    'worklet';\n    offsetRef.current.value =\n      event.contentOffset.x === 0\n        ? event.contentOffset.y\n        : event.contentOffset.x;\n  }, scrollEventNames);\n\n  useEffect(() => {\n    const viewTag = findNodeHandle(aref.current);\n    // @ts-ignore TODO TYPESCRIPT This happens because of\n    // how we had to type `useEvent` to get rid of .d.ts file.\n    event.current?.registerForEvents(viewTag as number);\n  }, [aref.current]);\n\n  return offsetRef.current;\n}\n"],"mappings":"AACA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,QAAAC,cAAA,oDAMzC,OAASC,QAAQ,eACjB,OAASC,cAAc,wBAEvB,GAAM,CAAAC,gBAAgB,CAAG,CACvB,UAAU,CACV,mBAAmB,CACnB,iBAAiB,CACjB,uBAAuB,CACvB,qBAAqB,CACtB,CAED,MAAO,SAAS,CAAAC,mBAAmBA,CACjCC,IAAoC,CACpCC,UAAgC,CACX,CACrB,GAAM,CAAAC,SAAS,CAAGR,MAAM,CACtBO,UAAU,GAAKE,SAAS,CAAGF,UAAU,CAAGJ,cAAc,CAAC,CAAC,CAAC,CAC1D,CAED,GAAM,CAAAO,KAAK,CAAGR,QAAQ,CAAe,SAAAQ,KAAkB,CAAK,CAC1D,SAAS,CACTF,SAAS,CAACG,OAAO,CAACC,KAAK,CACrBF,KAAK,CAACG,aAAa,CAACC,CAAC,GAAK,CAAC,CACvBJ,KAAK,CAACG,aAAa,CAACE,CAAC,CACrBL,KAAK,CAACG,aAAa,CAACC,CAAC,CAC7B,CAAC,CAAEV,gBAAgB,CAAC,CAEpBL,SAAS,CAAC,UAAM,KAAAiB,cAAA,CACd,GAAM,CAAAC,OAAO,CAAGhB,cAAc,CAACK,IAAI,CAACK,OAAO,CAAC,CAG5C,CAAAK,cAAA,CAAAN,KAAK,CAACC,OAAO,UAAAK,cAAA,iBAAbA,cAAA,CAAeE,iBAAiB,CAACD,OAAO,CAAW,CACrD,CAAC,CAAE,CAACX,IAAI,CAACK,OAAO,CAAC,CAAC,CAElB,MAAO,CAAAH,SAAS,CAACG,OAAO,CAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}